






Started logging.

<<<
Content-Length: 3037

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":12304,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"d:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","rootUri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","name":"TemoCloud"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1216

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","languageId":"cpp","version":1,"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266\r\n*/\r\n\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// GPIO where the DS18B20 is connected to\r\nconst int oneWireBus = 4;     \r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(oneWireBus);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\nvoid setup() {\r\n  // Start the Serial Monitor\r\n  Serial.begin(115200);\r\n  // Start the DS18B20 sensor\r\n  sensors.begin();\r\n}\r\n\r\nvoid loop() {\r\n  sensors.requestTemperatures(); \r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}}Content-Length: 261

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 1095

{"jsonrpc":"2.0","id":2,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":27}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":35}},"selectionRange":{"start":{"line":15,"character":18},"end":{"line":15,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 42400

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","buildOutputUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/arduino/sketches/DED8D48A9CC8B4B1794B2DD1B62EF77D","executableSectionsSize":[{"name":"text","size":266800,"maxSize":1044464},{"name":"data","size":26968,"maxSize":81920}],"usedLibraries":[{"name":"OneWire","author":"Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom","maintainer":"Paul Stoffregen","sentence":"Access 1-wire temperature sensors, memory and other chips.","paragraph":"","website":"http://www.pjrc.com/teensy/td_libs_OneWire.html","category":"Communication","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.3.8","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS18x20_Temperature","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS2408_Switch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS250x_PROM"],"providesIncludes":["OneWire.h"],"properties":{},"compatibleWith":{}},{"name":"DallasTemperature","author":"Miles Burton <mail@milesburton.com>, Tim Newsome <nuisance@casualhacker.net>, Guil Barros <gfbarros@bappos.com>, Rob Tillaart <rob.tillaart@gmail.com>","maintainer":"Miles Burton <mail@milesburton.com>","sentence":"Arduino library for Dallas/Maxim temperature ICs","paragraph":"Support for DS18B20 and other Dallas/Maxim 1-Wire temperature sensors","website":"https://github.com/milesburton/Arduino-Temperature-Control-Library","category":"Sensors","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"4.0.3","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Alarm","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\AlarmHandler","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ESP-WebServer","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ExternalPullup","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multibus_simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multiple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SaveRecallScratchPad","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SetUserData","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Single","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Tester","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Timing","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\TwoPin_DS18B20","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataDemo","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataWriteBatch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion2","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\oneWireSearch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\readPowerSupply"],"providesIncludes":["DallasTemperature.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp8266:esp8266","version":"2.7.4","installDir":"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","packageUrl":"https://arduino.esp8266.com/stable/package_esp8266com_index.json"},"buildProperties":["_id=nodemcuv2","build.arch=ESP8266","build.board=ESP8266_NODEMCU","build.board.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.core=esp8266","build.core.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266","build.core.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.debug_level=","build.debug_port=","build.exception_flags=-fno-exceptions","build.extra_flags=-DESP8266","build.f_cpu=80000000L","build.flash_flags=-DFLASHMODE_DIO","build.flash_freq=40","build.flash_ld=eagle.flash.4m2m.ld","build.flash_mode=dio","build.flash_size=4M","build.flash_size_bytes=0x400000","build.float=-u _printf_float -u _scanf_float","build.fqbn=esp8266:esp8266:nodemcuv2:led=2,baud=115200,xtal=80,eesz=4M2M,dbg=Disabled,lvl=None____,ip=lm2f,vt=flash,exception=legacy,wipe=none,ssl=all","build.led=-DLED_BUILTIN=2","build.library_discovery_phase=0","build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","build.lwip_include=lwip2/include","build.lwip_lib=-llwip2-536-feat","build.mcu=esp8266","build.path=C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","build.project_name=TemoCloud.ino","build.rfcal_addr=0x3FC000","build.sdk=NONOSDK22x_190703","build.source.path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","build.spiffs_blocksize=8192","build.spiffs_end=0x3FA000","build.spiffs_pagesize=256","build.spiffs_start=0x200000","build.sslflags=","build.stdcpp_level=-std=gnu++11","build.stdcpp_lib=-lstdc++","build.system.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\system","build.variant=nodemcu","build.variant.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\variants\\nodemcu","build.vtable_flags=-DVTABLES_IN_FLASH","compiler.S.cmd=xtensa-lx106-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls","compiler.ar.cmd=xtensa-lx106-elf-ar","compiler.ar.extra_flags=","compiler.ar.flags=cru","compiler.as.cmd=xtensa-lx106-elf-as","compiler.c.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read","compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc","compiler.c.extra_flags=","compiler.c.flags=-c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpp.cmd=xtensa-lx106-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\"","compiler.elf2hex.cmd=esptool","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=","compiler.libc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf","compiler.objcopy.eep.extra_flags=","compiler.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/","compiler.sdk.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk","compiler.size.cmd=xtensa-lx106-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1745670068","extra.time.utc=1745659268","extra.time.zone=10800","ide_version=10607","menu.baud.115200=115200","menu.baud.115200.upload.speed=115200","menu.baud.230400.linux=230400","menu.baud.230400.macosx=230400","menu.baud.230400.upload.speed=230400","menu.baud.256000=256000","menu.baud.256000.upload.speed=256000","menu.baud.3000000=3000000","menu.baud.3000000.upload.speed=3000000","menu.baud.460800.linux=460800","menu.baud.460800.macosx=460800","menu.baud.460800.upload.speed=460800","menu.baud.512000=512000","menu.baud.512000.upload.speed=512000","menu.baud.57600=57600","menu.baud.57600.upload.speed=57600","menu.baud.921600=921600","menu.baud.921600.upload.speed=921600","menu.dbg.Disabled=Disabled","menu.dbg.Disabled.build.debug_port=","menu.dbg.Serial=Serial","menu.dbg.Serial.build.debug_port=-DDEBUG_ESP_PORT=Serial","menu.dbg.Serial1=Serial1","menu.dbg.Serial1.build.debug_port=-DDEBUG_ESP_PORT=Serial1","menu.eesz.4M=4MB (FS:none OTA:~1019KB)","menu.eesz.4M.build.flash_ld=eagle.flash.4m.ld","menu.eesz.4M.build.flash_size=4M","menu.eesz.4M.build.flash_size_bytes=0x400000","menu.eesz.4M.build.rfcal_addr=0x3FC000","menu.eesz.4M.build.spiffs_pagesize=256","menu.eesz.4M.upload.maximum_size=1044464","menu.eesz.4M1M=4MB (FS:1MB OTA:~1019KB)","menu.eesz.4M1M.build.flash_ld=eagle.flash.4m1m.ld","menu.eesz.4M1M.build.flash_size=4M","menu.eesz.4M1M.build.flash_size_bytes=0x400000","menu.eesz.4M1M.build.rfcal_addr=0x3FC000","menu.eesz.4M1M.build.spiffs_blocksize=8192","menu.eesz.4M1M.build.spiffs_end=0x3FA000","menu.eesz.4M1M.build.spiffs_pagesize=256","menu.eesz.4M1M.build.spiffs_start=0x300000","menu.eesz.4M1M.upload.maximum_size=1044464","menu.eesz.4M2M=4MB (FS:2MB OTA:~1019KB)","menu.eesz.4M2M.build.flash_ld=eagle.flash.4m2m.ld","menu.eesz.4M2M.build.flash_size=4M","menu.eesz.4M2M.build.flash_size_bytes=0x400000","menu.eesz.4M2M.build.rfcal_addr=0x3FC000","menu.eesz.4M2M.build.spiffs_blocksize=8192","menu.eesz.4M2M.build.spiffs_end=0x3FA000","menu.eesz.4M2M.build.spiffs_pagesize=256","menu.eesz.4M2M.build.spiffs_start=0x200000","menu.eesz.4M2M.upload.maximum_size=1044464","menu.eesz.4M3M=4MB (FS:3MB OTA:~512KB)","menu.eesz.4M3M.build.flash_ld=eagle.flash.4m3m.ld","menu.eesz.4M3M.build.flash_size=4M","menu.eesz.4M3M.build.flash_size_bytes=0x400000","menu.eesz.4M3M.build.rfcal_addr=0x3FC000","menu.eesz.4M3M.build.spiffs_blocksize=8192","menu.eesz.4M3M.build.spiffs_end=0x3FA000","menu.eesz.4M3M.build.spiffs_pagesize=256","menu.eesz.4M3M.build.spiffs_start=0x100000","menu.eesz.4M3M.upload.maximum_size=1044464","menu.exception.disabled=Disabled (new can abort)","menu.exception.disabled.build.exception_flags=-fno-exceptions -DNEW_OOM_ABORT","menu.exception.disabled.build.stdcpp_lib=-lstdc++","menu.exception.enabled=Enabled","menu.exception.enabled.build.exception_flags=-fexceptions","menu.exception.enabled.build.stdcpp_lib=-lstdc++-exc","menu.exception.legacy=Legacy (new can return nullptr)","menu.exception.legacy.build.exception_flags=-fno-exceptions","menu.exception.legacy.build.stdcpp_lib=-lstdc++","menu.ip.hb1=v1.4 Higher Bandwidth","menu.ip.hb1.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.hb1.build.lwip_lib=-llwip_gcc","menu.ip.hb2f=v2 Higher Bandwidth","menu.ip.hb2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.hb2f.build.lwip_include=lwip2/include","menu.ip.hb2f.build.lwip_lib=-llwip2-1460-feat","menu.ip.hb2n=v2 Higher Bandwidth (no features)","menu.ip.hb2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.hb2n.build.lwip_include=lwip2/include","menu.ip.hb2n.build.lwip_lib=-llwip2-1460","menu.ip.hb6f=v2 IPv6 Higher Bandwidth","menu.ip.hb6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.hb6f.build.lwip_include=lwip2/include","menu.ip.hb6f.build.lwip_lib=-llwip6-1460-feat","menu.ip.lm2f=v2 Lower Memory","menu.ip.lm2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.lm2f.build.lwip_include=lwip2/include","menu.ip.lm2f.build.lwip_lib=-llwip2-536-feat","menu.ip.lm2n=v2 Lower Memory (no features)","menu.ip.lm2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.lm2n.build.lwip_include=lwip2/include","menu.ip.lm2n.build.lwip_lib=-llwip2-536","menu.ip.lm6f=v2 IPv6 Lower Memory","menu.ip.lm6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.lm6f.build.lwip_include=lwip2/include","menu.ip.lm6f.build.lwip_lib=-llwip6-536-feat","menu.ip.src=v1.4 Compile from source","menu.ip.src.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.src.build.lwip_lib=-llwip_src","menu.ip.src.recipe.hooks.sketch.prebuild.1.pattern=make -C \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip/src\" install TOOLS_PATH=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-\"","menu.led.16=16","menu.led.16.build.led=-DLED_BUILTIN=16","menu.led.2=2","menu.led.2.build.led=-DLED_BUILTIN=2","menu.lvl.CORE=CORE","menu.lvl.CORE.build.debug_level=-DDEBUG_ESP_CORE","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.HTTP_CLIENT=HTTP_CLIENT","menu.lvl.HTTP_CLIENT.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT","menu.lvl.HTTP_CLIENTHTTP_SERVER=HTTP_CLIENT+HTTP_SERVER","menu.lvl.HTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_SERVER=HTTP_SERVER","menu.lvl.HTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_UPDATE=HTTP_UPDATE","menu.lvl.HTTP_UPDATE.build.debug_level=-DDEBUG_ESP_HTTP_UPDATE","menu.lvl.MDNS=MDNS","menu.lvl.MDNS.build.debug_level=-DDEBUG_ESP_MDNS","menu.lvl.NoAssert-NDEBUG=NoAssert-NDEBUG","menu.lvl.NoAssert-NDEBUG.build.debug_level=-DNDEBUG","menu.lvl.None____=None","menu.lvl.None____.build.debug_level=","menu.lvl.OOM=OOM","menu.lvl.OOM.build.debug_level=-DDEBUG_ESP_OOM","menu.lvl.OTA=OTA","menu.lvl.OTA.build.debug_level=-DDEBUG_ESP_OTA","menu.lvl.SSL=SSL","menu.lvl.SSL.build.debug_level=-DDEBUG_ESP_SSL","menu.lvl.SSLHTTP_CLIENT=SSL+HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER=SSL+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLHTTP_SERVER=SSL+HTTP_SERVER","menu.lvl.SSLHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEM=SSL+TLS_MEM","menu.lvl.SSLTLS_MEM.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM","menu.lvl.SSLTLS_MEMHTTP_CLIENT=SSL+TLS_MEM+HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER+CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.SSLTLS_MEMHTTP_SERVER=SSL+TLS_MEM+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEM=TLS_MEM","menu.lvl.TLS_MEM.build.debug_level=-DDEBUG_ESP_TLS_MEM","menu.lvl.TLS_MEMHTTP_CLIENT=TLS_MEM+HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER=TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER=TLS_MEM+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.UPDATER=UPDATER","menu.lvl.UPDATER.build.debug_level=-DDEBUG_ESP_UPDATER","menu.lvl.WIFI=WIFI","menu.lvl.WIFI.build.debug_level=-DDEBUG_ESP_WIFI","menu.ssl.all=All SSL ciphers (most compatible)","menu.ssl.all.build.sslflags=","menu.ssl.basic=Basic SSL ciphers (lower ROM use)","menu.ssl.basic.build.sslflags=-DBEARSSL_SSL_BASIC","menu.vt.flash=Flash","menu.vt.flash.build.vtable_flags=-DVTABLES_IN_FLASH","menu.vt.heap=Heap","menu.vt.heap.build.vtable_flags=-DVTABLES_IN_DRAM","menu.vt.iram=IRAM","menu.vt.iram.build.vtable_flags=-DVTABLES_IN_IRAM","menu.wipe.all=All Flash Contents","menu.wipe.all.upload.erase_cmd=erase_flash","menu.wipe.none=Only Sketch","menu.wipe.none.upload.erase_cmd=","menu.wipe.sdk=Sketch + WiFi Settings","menu.wipe.sdk.upload.erase_cmd=erase_region \"0x3FC000\" 0x4000","menu.xtal.160=160 MHz","menu.xtal.160.build.f_cpu=160000000L","menu.xtal.80=80 MHz","menu.xtal.80.build.f_cpu=80000000L","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=NodeMCU 1.0 (ESP-12E Module)","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -g -x assembler-with-cpp -MMD -mlongcalls -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-ar\" cru  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -fno-exceptions -Wl,-Map \"-Wl,C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.map\" -g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read  -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" -lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc -Wl,--end-group  \"-LC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D\"","recipe.c.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.hooks.linking.prelink.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -CC -E -P -DVTABLES_IN_FLASH \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld/eagle.app.v6.common.ld.h\" -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/local.eagle.app.v6.common.ld\"","recipe.hooks.sketch.prebuild.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode header --publickey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/public.key\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core/Updater_Signing.h\"","recipe.objcopy.eep.pattern=","recipe.objcopy.hex.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py\" --eboot \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf\" --app \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --flash_mode dio --flash_freq 40 --flash_size 4M --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","recipe.objcopy.hex.2.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode sign --privatekey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/private.key\" --bin \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.signed\" --legacy \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.legacy_sig\"","recipe.objcopy.hex.3.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py\" --elf \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\"","recipe.output.save_file=TemoCloud.ino.nodemcu.bin","recipe.output.tmp_file=TemoCloud.ino.bin","recipe.size.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-size\" -A \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\"","recipe.size.regex=^(?:\\.irom0\\.text|\\.text|\\.text1|\\.data|\\.rodata|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.rodata|\\.bss)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino5","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.bossac-1.6.1-arduino.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.bossac.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.eboot=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf","runtime.tools.elf2bin=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py","runtime.tools.esp-rv32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.4-2f7dcd86-v1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esp32-arduino-libs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py-4.9.dev3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.9.dev3","runtime.tools.esptool_py.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.linux-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\dfu-util","runtime.tools.linux-hid_flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\hid_flash","runtime.tools.linux-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\src","runtime.tools.linux-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stlink","runtime.tools.linux-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux64-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\dfu-util","runtime.tools.linux64-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\src","runtime.tools.linux64-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stlink","runtime.tools.linux64-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.linux64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.macosx-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\dfu-util","runtime.tools.macosx-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\src","runtime.tools.macosx-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stlink","runtime.tools.macosx-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.macosx.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.makecorever=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/makecorever.py","runtime.tools.mdns-discovery-1.0.5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.5","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-2.5.0-4-fe5bb56.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.openocd-esp32-v0.12.0-esp32-20230921.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20230921","runtime.tools.openocd-esp32-v0.12.0-esp32-20241016.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.openocd-esp32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.s3-gcc-2021r2-p5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.s3-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.signing=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py","runtime.tools.sizes=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py","runtime.tools.stm32tools-2021.5.31.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.stm32tools.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.win-dfu-util-0.9-win64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\dfu-util-0.9-win64","runtime.tools.win-lib.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\lib","runtime.tools.win-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\src","runtime.tools.win-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\stlink","runtime.tools.win-texane-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.win.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-lx106-elf-gcc-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","serial.disableDTR=true","serial.disableRTS=true","sketch_path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","software=ARDUINO","tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.esptool.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.path=","tools.esptool.upload.network_pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.params.quiet=","tools.esptool.upload.params.verbose=","tools.esptool.upload.pattern=\"{cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/upload.py\" --chip esp8266 --port \"{serial.port}\" --baud \"115200\" \"{upload.verbose}\"  --before default_reset --after hard_reset write_flash 0x0 \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.protocol=esp","tools.esptool__pluggable_network.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.path=","tools.esptool__pluggable_network.upload.field.password=Password","tools.esptool__pluggable_network.upload.field.password.secret=true","tools.esptool__pluggable_network.upload.params.quiet=","tools.esptool__pluggable_network.upload.params.verbose=","tools.esptool__pluggable_network.upload.pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{upload.port.address}\" -p \"{upload.port.properties.port}\" \"--auth={upload.field.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool__pluggable_network.upload.protocol=esp","tools.mklittlefs.cmd=mklittlefs.exe","tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/mklittlefs","tools.mkspiffs.cmd=mkspiffs.exe","tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","upload.erase_cmd=","upload.maximum_data_size=81920","upload.maximum_size=1044464","upload.resetmethod=--before default_reset --after hard_reset","upload.speed=115200","upload.tool=esptool","upload.tool.default=esptool","upload.tool.network=esptool__pluggable_network","upload.wait_for_upload_port=true","upload_port.0.board=nodemcuv2","version=2.7.4"]}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 42400

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","buildOutputUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/arduino/sketches/DED8D48A9CC8B4B1794B2DD1B62EF77D","executableSectionsSize":[{"name":"text","size":266800,"maxSize":1044464},{"name":"data","size":26968,"maxSize":81920}],"usedLibraries":[{"name":"OneWire","author":"Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom","maintainer":"Paul Stoffregen","sentence":"Access 1-wire temperature sensors, memory and other chips.","paragraph":"","website":"http://www.pjrc.com/teensy/td_libs_OneWire.html","category":"Communication","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.3.8","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS18x20_Temperature","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS2408_Switch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS250x_PROM"],"providesIncludes":["OneWire.h"],"properties":{},"compatibleWith":{}},{"name":"DallasTemperature","author":"Miles Burton <mail@milesburton.com>, Tim Newsome <nuisance@casualhacker.net>, Guil Barros <gfbarros@bappos.com>, Rob Tillaart <rob.tillaart@gmail.com>","maintainer":"Miles Burton <mail@milesburton.com>","sentence":"Arduino library for Dallas/Maxim temperature ICs","paragraph":"Support for DS18B20 and other Dallas/Maxim 1-Wire temperature sensors","website":"https://github.com/milesburton/Arduino-Temperature-Control-Library","category":"Sensors","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"4.0.3","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Alarm","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\AlarmHandler","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ESP-WebServer","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ExternalPullup","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multibus_simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multiple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SaveRecallScratchPad","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SetUserData","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Single","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Tester","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Timing","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\TwoPin_DS18B20","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataDemo","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataWriteBatch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion2","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\oneWireSearch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\readPowerSupply"],"providesIncludes":["DallasTemperature.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp8266:esp8266","version":"2.7.4","installDir":"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","packageUrl":"https://arduino.esp8266.com/stable/package_esp8266com_index.json"},"buildProperties":["_id=nodemcuv2","build.arch=ESP8266","build.board=ESP8266_NODEMCU","build.board.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.core=esp8266","build.core.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266","build.core.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.debug_level=","build.debug_port=","build.exception_flags=-fno-exceptions","build.extra_flags=-DESP8266","build.f_cpu=80000000L","build.flash_flags=-DFLASHMODE_DIO","build.flash_freq=40","build.flash_ld=eagle.flash.4m2m.ld","build.flash_mode=dio","build.flash_size=4M","build.flash_size_bytes=0x400000","build.float=-u _printf_float -u _scanf_float","build.fqbn=esp8266:esp8266:nodemcuv2:led=2,baud=115200,xtal=80,eesz=4M2M,dbg=Disabled,lvl=None____,ip=lm2f,vt=flash,exception=legacy,wipe=none,ssl=all","build.led=-DLED_BUILTIN=2","build.library_discovery_phase=0","build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","build.lwip_include=lwip2/include","build.lwip_lib=-llwip2-536-feat","build.mcu=esp8266","build.path=C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","build.project_name=TemoCloud.ino","build.rfcal_addr=0x3FC000","build.sdk=NONOSDK22x_190703","build.source.path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","build.spiffs_blocksize=8192","build.spiffs_end=0x3FA000","build.spiffs_pagesize=256","build.spiffs_start=0x200000","build.sslflags=","build.stdcpp_level=-std=gnu++11","build.stdcpp_lib=-lstdc++","build.system.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\system","build.variant=nodemcu","build.variant.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\variants\\nodemcu","build.vtable_flags=-DVTABLES_IN_FLASH","compiler.S.cmd=xtensa-lx106-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls","compiler.ar.cmd=xtensa-lx106-elf-ar","compiler.ar.extra_flags=","compiler.ar.flags=cru","compiler.as.cmd=xtensa-lx106-elf-as","compiler.c.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read","compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc","compiler.c.extra_flags=","compiler.c.flags=-c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpp.cmd=xtensa-lx106-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\"","compiler.elf2hex.cmd=esptool","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=","compiler.libc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf","compiler.objcopy.eep.extra_flags=","compiler.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/","compiler.sdk.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk","compiler.size.cmd=xtensa-lx106-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1745670084","extra.time.utc=1745659284","extra.time.zone=10800","ide_version=10607","menu.baud.115200=115200","menu.baud.115200.upload.speed=115200","menu.baud.230400.linux=230400","menu.baud.230400.macosx=230400","menu.baud.230400.upload.speed=230400","menu.baud.256000=256000","menu.baud.256000.upload.speed=256000","menu.baud.3000000=3000000","menu.baud.3000000.upload.speed=3000000","menu.baud.460800.linux=460800","menu.baud.460800.macosx=460800","menu.baud.460800.upload.speed=460800","menu.baud.512000=512000","menu.baud.512000.upload.speed=512000","menu.baud.57600=57600","menu.baud.57600.upload.speed=57600","menu.baud.921600=921600","menu.baud.921600.upload.speed=921600","menu.dbg.Disabled=Disabled","menu.dbg.Disabled.build.debug_port=","menu.dbg.Serial=Serial","menu.dbg.Serial.build.debug_port=-DDEBUG_ESP_PORT=Serial","menu.dbg.Serial1=Serial1","menu.dbg.Serial1.build.debug_port=-DDEBUG_ESP_PORT=Serial1","menu.eesz.4M=4MB (FS:none OTA:~1019KB)","menu.eesz.4M.build.flash_ld=eagle.flash.4m.ld","menu.eesz.4M.build.flash_size=4M","menu.eesz.4M.build.flash_size_bytes=0x400000","menu.eesz.4M.build.rfcal_addr=0x3FC000","menu.eesz.4M.build.spiffs_pagesize=256","menu.eesz.4M.upload.maximum_size=1044464","menu.eesz.4M1M=4MB (FS:1MB OTA:~1019KB)","menu.eesz.4M1M.build.flash_ld=eagle.flash.4m1m.ld","menu.eesz.4M1M.build.flash_size=4M","menu.eesz.4M1M.build.flash_size_bytes=0x400000","menu.eesz.4M1M.build.rfcal_addr=0x3FC000","menu.eesz.4M1M.build.spiffs_blocksize=8192","menu.eesz.4M1M.build.spiffs_end=0x3FA000","menu.eesz.4M1M.build.spiffs_pagesize=256","menu.eesz.4M1M.build.spiffs_start=0x300000","menu.eesz.4M1M.upload.maximum_size=1044464","menu.eesz.4M2M=4MB (FS:2MB OTA:~1019KB)","menu.eesz.4M2M.build.flash_ld=eagle.flash.4m2m.ld","menu.eesz.4M2M.build.flash_size=4M","menu.eesz.4M2M.build.flash_size_bytes=0x400000","menu.eesz.4M2M.build.rfcal_addr=0x3FC000","menu.eesz.4M2M.build.spiffs_blocksize=8192","menu.eesz.4M2M.build.spiffs_end=0x3FA000","menu.eesz.4M2M.build.spiffs_pagesize=256","menu.eesz.4M2M.build.spiffs_start=0x200000","menu.eesz.4M2M.upload.maximum_size=1044464","menu.eesz.4M3M=4MB (FS:3MB OTA:~512KB)","menu.eesz.4M3M.build.flash_ld=eagle.flash.4m3m.ld","menu.eesz.4M3M.build.flash_size=4M","menu.eesz.4M3M.build.flash_size_bytes=0x400000","menu.eesz.4M3M.build.rfcal_addr=0x3FC000","menu.eesz.4M3M.build.spiffs_blocksize=8192","menu.eesz.4M3M.build.spiffs_end=0x3FA000","menu.eesz.4M3M.build.spiffs_pagesize=256","menu.eesz.4M3M.build.spiffs_start=0x100000","menu.eesz.4M3M.upload.maximum_size=1044464","menu.exception.disabled=Disabled (new can abort)","menu.exception.disabled.build.exception_flags=-fno-exceptions -DNEW_OOM_ABORT","menu.exception.disabled.build.stdcpp_lib=-lstdc++","menu.exception.enabled=Enabled","menu.exception.enabled.build.exception_flags=-fexceptions","menu.exception.enabled.build.stdcpp_lib=-lstdc++-exc","menu.exception.legacy=Legacy (new can return nullptr)","menu.exception.legacy.build.exception_flags=-fno-exceptions","menu.exception.legacy.build.stdcpp_lib=-lstdc++","menu.ip.hb1=v1.4 Higher Bandwidth","menu.ip.hb1.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.hb1.build.lwip_lib=-llwip_gcc","menu.ip.hb2f=v2 Higher Bandwidth","menu.ip.hb2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.hb2f.build.lwip_include=lwip2/include","menu.ip.hb2f.build.lwip_lib=-llwip2-1460-feat","menu.ip.hb2n=v2 Higher Bandwidth (no features)","menu.ip.hb2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.hb2n.build.lwip_include=lwip2/include","menu.ip.hb2n.build.lwip_lib=-llwip2-1460","menu.ip.hb6f=v2 IPv6 Higher Bandwidth","menu.ip.hb6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.hb6f.build.lwip_include=lwip2/include","menu.ip.hb6f.build.lwip_lib=-llwip6-1460-feat","menu.ip.lm2f=v2 Lower Memory","menu.ip.lm2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.lm2f.build.lwip_include=lwip2/include","menu.ip.lm2f.build.lwip_lib=-llwip2-536-feat","menu.ip.lm2n=v2 Lower Memory (no features)","menu.ip.lm2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.lm2n.build.lwip_include=lwip2/include","menu.ip.lm2n.build.lwip_lib=-llwip2-536","menu.ip.lm6f=v2 IPv6 Lower Memory","menu.ip.lm6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.lm6f.build.lwip_include=lwip2/include","menu.ip.lm6f.build.lwip_lib=-llwip6-536-feat","menu.ip.src=v1.4 Compile from source","menu.ip.src.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.src.build.lwip_lib=-llwip_src","menu.ip.src.recipe.hooks.sketch.prebuild.1.pattern=make -C \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip/src\" install TOOLS_PATH=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-\"","menu.led.16=16","menu.led.16.build.led=-DLED_BUILTIN=16","menu.led.2=2","menu.led.2.build.led=-DLED_BUILTIN=2","menu.lvl.CORE=CORE","menu.lvl.CORE.build.debug_level=-DDEBUG_ESP_CORE","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.HTTP_CLIENT=HTTP_CLIENT","menu.lvl.HTTP_CLIENT.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT","menu.lvl.HTTP_CLIENTHTTP_SERVER=HTTP_CLIENT+HTTP_SERVER","menu.lvl.HTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_SERVER=HTTP_SERVER","menu.lvl.HTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_UPDATE=HTTP_UPDATE","menu.lvl.HTTP_UPDATE.build.debug_level=-DDEBUG_ESP_HTTP_UPDATE","menu.lvl.MDNS=MDNS","menu.lvl.MDNS.build.debug_level=-DDEBUG_ESP_MDNS","menu.lvl.NoAssert-NDEBUG=NoAssert-NDEBUG","menu.lvl.NoAssert-NDEBUG.build.debug_level=-DNDEBUG","menu.lvl.None____=None","menu.lvl.None____.build.debug_level=","menu.lvl.OOM=OOM","menu.lvl.OOM.build.debug_level=-DDEBUG_ESP_OOM","menu.lvl.OTA=OTA","menu.lvl.OTA.build.debug_level=-DDEBUG_ESP_OTA","menu.lvl.SSL=SSL","menu.lvl.SSL.build.debug_level=-DDEBUG_ESP_SSL","menu.lvl.SSLHTTP_CLIENT=SSL+HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER=SSL+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLHTTP_SERVER=SSL+HTTP_SERVER","menu.lvl.SSLHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEM=SSL+TLS_MEM","menu.lvl.SSLTLS_MEM.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM","menu.lvl.SSLTLS_MEMHTTP_CLIENT=SSL+TLS_MEM+HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER+CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.SSLTLS_MEMHTTP_SERVER=SSL+TLS_MEM+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEM=TLS_MEM","menu.lvl.TLS_MEM.build.debug_level=-DDEBUG_ESP_TLS_MEM","menu.lvl.TLS_MEMHTTP_CLIENT=TLS_MEM+HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER=TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER=TLS_MEM+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.UPDATER=UPDATER","menu.lvl.UPDATER.build.debug_level=-DDEBUG_ESP_UPDATER","menu.lvl.WIFI=WIFI","menu.lvl.WIFI.build.debug_level=-DDEBUG_ESP_WIFI","menu.ssl.all=All SSL ciphers (most compatible)","menu.ssl.all.build.sslflags=","menu.ssl.basic=Basic SSL ciphers (lower ROM use)","menu.ssl.basic.build.sslflags=-DBEARSSL_SSL_BASIC","menu.vt.flash=Flash","menu.vt.flash.build.vtable_flags=-DVTABLES_IN_FLASH","menu.vt.heap=Heap","menu.vt.heap.build.vtable_flags=-DVTABLES_IN_DRAM","menu.vt.iram=IRAM","menu.vt.iram.build.vtable_flags=-DVTABLES_IN_IRAM","menu.wipe.all=All Flash Contents","menu.wipe.all.upload.erase_cmd=erase_flash","menu.wipe.none=Only Sketch","menu.wipe.none.upload.erase_cmd=","menu.wipe.sdk=Sketch + WiFi Settings","menu.wipe.sdk.upload.erase_cmd=erase_region \"0x3FC000\" 0x4000","menu.xtal.160=160 MHz","menu.xtal.160.build.f_cpu=160000000L","menu.xtal.80=80 MHz","menu.xtal.80.build.f_cpu=80000000L","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=NodeMCU 1.0 (ESP-12E Module)","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -g -x assembler-with-cpp -MMD -mlongcalls -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-ar\" cru  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -fno-exceptions -Wl,-Map \"-Wl,C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.map\" -g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read  -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" -lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc -Wl,--end-group  \"-LC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D\"","recipe.c.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.hooks.linking.prelink.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -CC -E -P -DVTABLES_IN_FLASH \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld/eagle.app.v6.common.ld.h\" -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/local.eagle.app.v6.common.ld\"","recipe.hooks.sketch.prebuild.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode header --publickey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/public.key\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core/Updater_Signing.h\"","recipe.objcopy.eep.pattern=","recipe.objcopy.hex.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py\" --eboot \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf\" --app \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --flash_mode dio --flash_freq 40 --flash_size 4M --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","recipe.objcopy.hex.2.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode sign --privatekey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/private.key\" --bin \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.signed\" --legacy \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.legacy_sig\"","recipe.objcopy.hex.3.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py\" --elf \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\"","recipe.output.save_file=TemoCloud.ino.nodemcu.bin","recipe.output.tmp_file=TemoCloud.ino.bin","recipe.size.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-size\" -A \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\"","recipe.size.regex=^(?:\\.irom0\\.text|\\.text|\\.text1|\\.data|\\.rodata|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.rodata|\\.bss)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino5","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.bossac-1.6.1-arduino.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.bossac.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.eboot=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf","runtime.tools.elf2bin=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py","runtime.tools.esp-rv32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.4-2f7dcd86-v1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esp32-arduino-libs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py-4.9.dev3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.9.dev3","runtime.tools.esptool_py.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.linux-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\dfu-util","runtime.tools.linux-hid_flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\hid_flash","runtime.tools.linux-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\src","runtime.tools.linux-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stlink","runtime.tools.linux-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux64-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\dfu-util","runtime.tools.linux64-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\src","runtime.tools.linux64-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stlink","runtime.tools.linux64-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.linux64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.macosx-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\dfu-util","runtime.tools.macosx-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\src","runtime.tools.macosx-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stlink","runtime.tools.macosx-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.macosx.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.makecorever=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/makecorever.py","runtime.tools.mdns-discovery-1.0.5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.5","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-2.5.0-4-fe5bb56.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.openocd-esp32-v0.12.0-esp32-20230921.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20230921","runtime.tools.openocd-esp32-v0.12.0-esp32-20241016.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.openocd-esp32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.s3-gcc-2021r2-p5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.s3-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.signing=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py","runtime.tools.sizes=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py","runtime.tools.stm32tools-2021.5.31.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.stm32tools.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.win-dfu-util-0.9-win64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\dfu-util-0.9-win64","runtime.tools.win-lib.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\lib","runtime.tools.win-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\src","runtime.tools.win-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\stlink","runtime.tools.win-texane-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.win.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-lx106-elf-gcc-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","serial.disableDTR=true","serial.disableRTS=true","sketch_path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","software=ARDUINO","tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.esptool.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.path=","tools.esptool.upload.network_pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.params.quiet=","tools.esptool.upload.params.verbose=","tools.esptool.upload.pattern=\"{cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/upload.py\" --chip esp8266 --port \"{serial.port}\" --baud \"115200\" \"{upload.verbose}\"  --before default_reset --after hard_reset write_flash 0x0 \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.protocol=esp","tools.esptool__pluggable_network.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.path=","tools.esptool__pluggable_network.upload.field.password=Password","tools.esptool__pluggable_network.upload.field.password.secret=true","tools.esptool__pluggable_network.upload.params.quiet=","tools.esptool__pluggable_network.upload.params.verbose=","tools.esptool__pluggable_network.upload.pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{upload.port.address}\" -p \"{upload.port.properties.port}\" \"--auth={upload.field.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool__pluggable_network.upload.protocol=esp","tools.mklittlefs.cmd=mklittlefs.exe","tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/mklittlefs","tools.mkspiffs.cmd=mkspiffs.exe","tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","upload.erase_cmd=","upload.maximum_data_size=81920","upload.maximum_size=1044464","upload.resetmethod=--before default_reset --after hard_reset","upload.speed=115200","upload.tool=esptool","upload.tool.default=esptool","upload.tool.network=esptool__pluggable_network","upload.wait_for_upload_port=true","upload_port.0.board=nodemcuv2","version=2.7.4"]}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 42400

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","buildOutputUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/arduino/sketches/DED8D48A9CC8B4B1794B2DD1B62EF77D","executableSectionsSize":[{"name":"text","size":266800,"maxSize":1044464},{"name":"data","size":26968,"maxSize":81920}],"usedLibraries":[{"name":"OneWire","author":"Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom","maintainer":"Paul Stoffregen","sentence":"Access 1-wire temperature sensors, memory and other chips.","paragraph":"","website":"http://www.pjrc.com/teensy/td_libs_OneWire.html","category":"Communication","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.3.8","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS18x20_Temperature","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS2408_Switch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS250x_PROM"],"providesIncludes":["OneWire.h"],"properties":{},"compatibleWith":{}},{"name":"DallasTemperature","author":"Miles Burton <mail@milesburton.com>, Tim Newsome <nuisance@casualhacker.net>, Guil Barros <gfbarros@bappos.com>, Rob Tillaart <rob.tillaart@gmail.com>","maintainer":"Miles Burton <mail@milesburton.com>","sentence":"Arduino library for Dallas/Maxim temperature ICs","paragraph":"Support for DS18B20 and other Dallas/Maxim 1-Wire temperature sensors","website":"https://github.com/milesburton/Arduino-Temperature-Control-Library","category":"Sensors","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"4.0.3","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Alarm","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\AlarmHandler","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ESP-WebServer","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ExternalPullup","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multibus_simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multiple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SaveRecallScratchPad","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SetUserData","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Single","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Tester","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Timing","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\TwoPin_DS18B20","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataDemo","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataWriteBatch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion2","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\oneWireSearch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\readPowerSupply"],"providesIncludes":["DallasTemperature.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp8266:esp8266","version":"2.7.4","installDir":"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","packageUrl":"https://arduino.esp8266.com/stable/package_esp8266com_index.json"},"buildProperties":["_id=nodemcuv2","build.arch=ESP8266","build.board=ESP8266_NODEMCU","build.board.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.core=esp8266","build.core.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266","build.core.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.debug_level=","build.debug_port=","build.exception_flags=-fno-exceptions","build.extra_flags=-DESP8266","build.f_cpu=80000000L","build.flash_flags=-DFLASHMODE_DIO","build.flash_freq=40","build.flash_ld=eagle.flash.4m2m.ld","build.flash_mode=dio","build.flash_size=4M","build.flash_size_bytes=0x400000","build.float=-u _printf_float -u _scanf_float","build.fqbn=esp8266:esp8266:nodemcuv2:led=2,baud=115200,xtal=80,eesz=4M2M,dbg=Disabled,lvl=None____,ip=lm2f,vt=flash,exception=legacy,wipe=none,ssl=all","build.led=-DLED_BUILTIN=2","build.library_discovery_phase=0","build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","build.lwip_include=lwip2/include","build.lwip_lib=-llwip2-536-feat","build.mcu=esp8266","build.path=C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","build.project_name=TemoCloud.ino","build.rfcal_addr=0x3FC000","build.sdk=NONOSDK22x_190703","build.source.path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","build.spiffs_blocksize=8192","build.spiffs_end=0x3FA000","build.spiffs_pagesize=256","build.spiffs_start=0x200000","build.sslflags=","build.stdcpp_level=-std=gnu++11","build.stdcpp_lib=-lstdc++","build.system.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\system","build.variant=nodemcu","build.variant.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\variants\\nodemcu","build.vtable_flags=-DVTABLES_IN_FLASH","compiler.S.cmd=xtensa-lx106-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls","compiler.ar.cmd=xtensa-lx106-elf-ar","compiler.ar.extra_flags=","compiler.ar.flags=cru","compiler.as.cmd=xtensa-lx106-elf-as","compiler.c.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read","compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc","compiler.c.extra_flags=","compiler.c.flags=-c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpp.cmd=xtensa-lx106-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\"","compiler.elf2hex.cmd=esptool","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=","compiler.libc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf","compiler.objcopy.eep.extra_flags=","compiler.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/","compiler.sdk.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk","compiler.size.cmd=xtensa-lx106-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1745670105","extra.time.utc=1745659305","extra.time.zone=10800","ide_version=10607","menu.baud.115200=115200","menu.baud.115200.upload.speed=115200","menu.baud.230400.linux=230400","menu.baud.230400.macosx=230400","menu.baud.230400.upload.speed=230400","menu.baud.256000=256000","menu.baud.256000.upload.speed=256000","menu.baud.3000000=3000000","menu.baud.3000000.upload.speed=3000000","menu.baud.460800.linux=460800","menu.baud.460800.macosx=460800","menu.baud.460800.upload.speed=460800","menu.baud.512000=512000","menu.baud.512000.upload.speed=512000","menu.baud.57600=57600","menu.baud.57600.upload.speed=57600","menu.baud.921600=921600","menu.baud.921600.upload.speed=921600","menu.dbg.Disabled=Disabled","menu.dbg.Disabled.build.debug_port=","menu.dbg.Serial=Serial","menu.dbg.Serial.build.debug_port=-DDEBUG_ESP_PORT=Serial","menu.dbg.Serial1=Serial1","menu.dbg.Serial1.build.debug_port=-DDEBUG_ESP_PORT=Serial1","menu.eesz.4M=4MB (FS:none OTA:~1019KB)","menu.eesz.4M.build.flash_ld=eagle.flash.4m.ld","menu.eesz.4M.build.flash_size=4M","menu.eesz.4M.build.flash_size_bytes=0x400000","menu.eesz.4M.build.rfcal_addr=0x3FC000","menu.eesz.4M.build.spiffs_pagesize=256","menu.eesz.4M.upload.maximum_size=1044464","menu.eesz.4M1M=4MB (FS:1MB OTA:~1019KB)","menu.eesz.4M1M.build.flash_ld=eagle.flash.4m1m.ld","menu.eesz.4M1M.build.flash_size=4M","menu.eesz.4M1M.build.flash_size_bytes=0x400000","menu.eesz.4M1M.build.rfcal_addr=0x3FC000","menu.eesz.4M1M.build.spiffs_blocksize=8192","menu.eesz.4M1M.build.spiffs_end=0x3FA000","menu.eesz.4M1M.build.spiffs_pagesize=256","menu.eesz.4M1M.build.spiffs_start=0x300000","menu.eesz.4M1M.upload.maximum_size=1044464","menu.eesz.4M2M=4MB (FS:2MB OTA:~1019KB)","menu.eesz.4M2M.build.flash_ld=eagle.flash.4m2m.ld","menu.eesz.4M2M.build.flash_size=4M","menu.eesz.4M2M.build.flash_size_bytes=0x400000","menu.eesz.4M2M.build.rfcal_addr=0x3FC000","menu.eesz.4M2M.build.spiffs_blocksize=8192","menu.eesz.4M2M.build.spiffs_end=0x3FA000","menu.eesz.4M2M.build.spiffs_pagesize=256","menu.eesz.4M2M.build.spiffs_start=0x200000","menu.eesz.4M2M.upload.maximum_size=1044464","menu.eesz.4M3M=4MB (FS:3MB OTA:~512KB)","menu.eesz.4M3M.build.flash_ld=eagle.flash.4m3m.ld","menu.eesz.4M3M.build.flash_size=4M","menu.eesz.4M3M.build.flash_size_bytes=0x400000","menu.eesz.4M3M.build.rfcal_addr=0x3FC000","menu.eesz.4M3M.build.spiffs_blocksize=8192","menu.eesz.4M3M.build.spiffs_end=0x3FA000","menu.eesz.4M3M.build.spiffs_pagesize=256","menu.eesz.4M3M.build.spiffs_start=0x100000","menu.eesz.4M3M.upload.maximum_size=1044464","menu.exception.disabled=Disabled (new can abort)","menu.exception.disabled.build.exception_flags=-fno-exceptions -DNEW_OOM_ABORT","menu.exception.disabled.build.stdcpp_lib=-lstdc++","menu.exception.enabled=Enabled","menu.exception.enabled.build.exception_flags=-fexceptions","menu.exception.enabled.build.stdcpp_lib=-lstdc++-exc","menu.exception.legacy=Legacy (new can return nullptr)","menu.exception.legacy.build.exception_flags=-fno-exceptions","menu.exception.legacy.build.stdcpp_lib=-lstdc++","menu.ip.hb1=v1.4 Higher Bandwidth","menu.ip.hb1.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.hb1.build.lwip_lib=-llwip_gcc","menu.ip.hb2f=v2 Higher Bandwidth","menu.ip.hb2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.hb2f.build.lwip_include=lwip2/include","menu.ip.hb2f.build.lwip_lib=-llwip2-1460-feat","menu.ip.hb2n=v2 Higher Bandwidth (no features)","menu.ip.hb2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.hb2n.build.lwip_include=lwip2/include","menu.ip.hb2n.build.lwip_lib=-llwip2-1460","menu.ip.hb6f=v2 IPv6 Higher Bandwidth","menu.ip.hb6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.hb6f.build.lwip_include=lwip2/include","menu.ip.hb6f.build.lwip_lib=-llwip6-1460-feat","menu.ip.lm2f=v2 Lower Memory","menu.ip.lm2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.lm2f.build.lwip_include=lwip2/include","menu.ip.lm2f.build.lwip_lib=-llwip2-536-feat","menu.ip.lm2n=v2 Lower Memory (no features)","menu.ip.lm2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.lm2n.build.lwip_include=lwip2/include","menu.ip.lm2n.build.lwip_lib=-llwip2-536","menu.ip.lm6f=v2 IPv6 Lower Memory","menu.ip.lm6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.lm6f.build.lwip_include=lwip2/include","menu.ip.lm6f.build.lwip_lib=-llwip6-536-feat","menu.ip.src=v1.4 Compile from source","menu.ip.src.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.src.build.lwip_lib=-llwip_src","menu.ip.src.recipe.hooks.sketch.prebuild.1.pattern=make -C \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip/src\" install TOOLS_PATH=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-\"","menu.led.16=16","menu.led.16.build.led=-DLED_BUILTIN=16","menu.led.2=2","menu.led.2.build.led=-DLED_BUILTIN=2","menu.lvl.CORE=CORE","menu.lvl.CORE.build.debug_level=-DDEBUG_ESP_CORE","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.HTTP_CLIENT=HTTP_CLIENT","menu.lvl.HTTP_CLIENT.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT","menu.lvl.HTTP_CLIENTHTTP_SERVER=HTTP_CLIENT+HTTP_SERVER","menu.lvl.HTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_SERVER=HTTP_SERVER","menu.lvl.HTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_UPDATE=HTTP_UPDATE","menu.lvl.HTTP_UPDATE.build.debug_level=-DDEBUG_ESP_HTTP_UPDATE","menu.lvl.MDNS=MDNS","menu.lvl.MDNS.build.debug_level=-DDEBUG_ESP_MDNS","menu.lvl.NoAssert-NDEBUG=NoAssert-NDEBUG","menu.lvl.NoAssert-NDEBUG.build.debug_level=-DNDEBUG","menu.lvl.None____=None","menu.lvl.None____.build.debug_level=","menu.lvl.OOM=OOM","menu.lvl.OOM.build.debug_level=-DDEBUG_ESP_OOM","menu.lvl.OTA=OTA","menu.lvl.OTA.build.debug_level=-DDEBUG_ESP_OTA","menu.lvl.SSL=SSL","menu.lvl.SSL.build.debug_level=-DDEBUG_ESP_SSL","menu.lvl.SSLHTTP_CLIENT=SSL+HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER=SSL+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLHTTP_SERVER=SSL+HTTP_SERVER","menu.lvl.SSLHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEM=SSL+TLS_MEM","menu.lvl.SSLTLS_MEM.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM","menu.lvl.SSLTLS_MEMHTTP_CLIENT=SSL+TLS_MEM+HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER+CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.SSLTLS_MEMHTTP_SERVER=SSL+TLS_MEM+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEM=TLS_MEM","menu.lvl.TLS_MEM.build.debug_level=-DDEBUG_ESP_TLS_MEM","menu.lvl.TLS_MEMHTTP_CLIENT=TLS_MEM+HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER=TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER=TLS_MEM+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.UPDATER=UPDATER","menu.lvl.UPDATER.build.debug_level=-DDEBUG_ESP_UPDATER","menu.lvl.WIFI=WIFI","menu.lvl.WIFI.build.debug_level=-DDEBUG_ESP_WIFI","menu.ssl.all=All SSL ciphers (most compatible)","menu.ssl.all.build.sslflags=","menu.ssl.basic=Basic SSL ciphers (lower ROM use)","menu.ssl.basic.build.sslflags=-DBEARSSL_SSL_BASIC","menu.vt.flash=Flash","menu.vt.flash.build.vtable_flags=-DVTABLES_IN_FLASH","menu.vt.heap=Heap","menu.vt.heap.build.vtable_flags=-DVTABLES_IN_DRAM","menu.vt.iram=IRAM","menu.vt.iram.build.vtable_flags=-DVTABLES_IN_IRAM","menu.wipe.all=All Flash Contents","menu.wipe.all.upload.erase_cmd=erase_flash","menu.wipe.none=Only Sketch","menu.wipe.none.upload.erase_cmd=","menu.wipe.sdk=Sketch + WiFi Settings","menu.wipe.sdk.upload.erase_cmd=erase_region \"0x3FC000\" 0x4000","menu.xtal.160=160 MHz","menu.xtal.160.build.f_cpu=160000000L","menu.xtal.80=80 MHz","menu.xtal.80.build.f_cpu=80000000L","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=NodeMCU 1.0 (ESP-12E Module)","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -g -x assembler-with-cpp -MMD -mlongcalls -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-ar\" cru  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -fno-exceptions -Wl,-Map \"-Wl,C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.map\" -g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read  -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" -lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc -Wl,--end-group  \"-LC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D\"","recipe.c.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.hooks.linking.prelink.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -CC -E -P -DVTABLES_IN_FLASH \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld/eagle.app.v6.common.ld.h\" -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/local.eagle.app.v6.common.ld\"","recipe.hooks.sketch.prebuild.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode header --publickey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/public.key\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core/Updater_Signing.h\"","recipe.objcopy.eep.pattern=","recipe.objcopy.hex.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py\" --eboot \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf\" --app \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --flash_mode dio --flash_freq 40 --flash_size 4M --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","recipe.objcopy.hex.2.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode sign --privatekey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/private.key\" --bin \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.signed\" --legacy \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.legacy_sig\"","recipe.objcopy.hex.3.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py\" --elf \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\"","recipe.output.save_file=TemoCloud.ino.nodemcu.bin","recipe.output.tmp_file=TemoCloud.ino.bin","recipe.size.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-size\" -A \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\"","recipe.size.regex=^(?:\\.irom0\\.text|\\.text|\\.text1|\\.data|\\.rodata|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.rodata|\\.bss)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino5","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.bossac-1.6.1-arduino.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.bossac.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.eboot=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf","runtime.tools.elf2bin=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py","runtime.tools.esp-rv32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.4-2f7dcd86-v1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esp32-arduino-libs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py-4.9.dev3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.9.dev3","runtime.tools.esptool_py.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.linux-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\dfu-util","runtime.tools.linux-hid_flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\hid_flash","runtime.tools.linux-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\src","runtime.tools.linux-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stlink","runtime.tools.linux-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux64-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\dfu-util","runtime.tools.linux64-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\src","runtime.tools.linux64-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stlink","runtime.tools.linux64-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.linux64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.macosx-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\dfu-util","runtime.tools.macosx-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\src","runtime.tools.macosx-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stlink","runtime.tools.macosx-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.macosx.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.makecorever=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/makecorever.py","runtime.tools.mdns-discovery-1.0.5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.5","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-2.5.0-4-fe5bb56.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.openocd-esp32-v0.12.0-esp32-20230921.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20230921","runtime.tools.openocd-esp32-v0.12.0-esp32-20241016.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.openocd-esp32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.s3-gcc-2021r2-p5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.s3-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.signing=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py","runtime.tools.sizes=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py","runtime.tools.stm32tools-2021.5.31.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.stm32tools.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.win-dfu-util-0.9-win64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\dfu-util-0.9-win64","runtime.tools.win-lib.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\lib","runtime.tools.win-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\src","runtime.tools.win-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\stlink","runtime.tools.win-texane-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.win.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-lx106-elf-gcc-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","serial.disableDTR=true","serial.disableRTS=true","sketch_path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","software=ARDUINO","tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.esptool.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.path=","tools.esptool.upload.network_pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.params.quiet=","tools.esptool.upload.params.verbose=","tools.esptool.upload.pattern=\"{cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/upload.py\" --chip esp8266 --port \"{serial.port}\" --baud \"115200\" \"{upload.verbose}\"  --before default_reset --after hard_reset write_flash 0x0 \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.protocol=esp","tools.esptool__pluggable_network.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.path=","tools.esptool__pluggable_network.upload.field.password=Password","tools.esptool__pluggable_network.upload.field.password.secret=true","tools.esptool__pluggable_network.upload.params.quiet=","tools.esptool__pluggable_network.upload.params.verbose=","tools.esptool__pluggable_network.upload.pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{upload.port.address}\" -p \"{upload.port.properties.port}\" \"--auth={upload.field.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool__pluggable_network.upload.protocol=esp","tools.mklittlefs.cmd=mklittlefs.exe","tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/mklittlefs","tools.mkspiffs.cmd=mkspiffs.exe","tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","upload.erase_cmd=","upload.maximum_data_size=81920","upload.maximum_size=1044464","upload.resetmethod=--before default_reset --after hard_reset","upload.speed=115200","upload.tool=esptool","upload.tool.default=esptool","upload.tool.network=esptool__pluggable_network","upload.wait_for_upload_port=true","upload_port.0.board=nodemcuv2","version=2.7.4"]}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 162

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 1095

{"jsonrpc":"2.0","id":3,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":27}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":35}},"selectionRange":{"start":{"line":15,"character":18},"end":{"line":15,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":25,"character":30}}}
>>>
Content-Length: 381

{"jsonrpc":"2.0","id":4,"result":{"contents":{"kind":"markdown","value":"### instance-method `requestTemperatures`  \n\n---\n→ `struct DallasTemperature::request_t`  \nTemperature Operations  \n\n---\n```cpp\n// In DallasTemperature\npublic: DallasTemperature::request_t requestTemperatures()\n```"},"range":{"start":{"line":25,"character":30},"end":{"line":25,"character":31}}}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":25,"character":32}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":6,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3036

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":2752,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"d:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","rootUri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","name":"TemoCloud"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 1216

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","languageId":"cpp","version":1,"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266\r\n*/\r\n\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// GPIO where the DS18B20 is connected to\r\nconst int oneWireBus = 4;     \r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(oneWireBus);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\nvoid setup() {\r\n  // Start the Serial Monitor\r\n  Serial.begin(115200);\r\n  // Start the DS18B20 sensor\r\n  sensors.begin();\r\n}\r\n\r\nvoid loop() {\r\n  sensors.requestTemperatures(); \r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}}Content-Length: 261

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 191

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":15,"character":28}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 190

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":6,"character":17}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 189

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":1,"character":2}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 1095

{"jsonrpc":"2.0","id":2,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":27}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":35}},"selectionRange":{"start":{"line":15,"character":18},"end":{"line":15,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}]}Content-Length: 355

{"jsonrpc":"2.0","id":3,"result":{"contents":{"kind":"markdown","value":"### variable `oneWire`  \n\n---\nType: `class OneWire`  \nValue = `\u0026oneWire`  \nSetup a oneWire instance to communicate with any OneWire devices  \n\n---\n```cpp\nOneWire oneWire(oneWireBus)\n```"},"range":{"start":{"line":15,"character":27},"end":{"line":15,"character":34}}}}Content-Length: 209

{"jsonrpc":"2.0","id":4,"result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 189

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":5,"character":0}}}
>>>
Content-Length: 179

{"jsonrpc":"2.0","id":6,"result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}
<<<
Content-Length: 162

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 1095

{"jsonrpc":"2.0","id":7,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":27}},"selectionRange":{"start":{"line":12,"character":8},"end":{"line":12,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":35}},"selectionRange":{"start":{"line":15,"character":18},"end":{"line":15,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":17,"character":0},"end":{"line":22,"character":1}},"selectionRange":{"start":{"line":17,"character":5},"end":{"line":17,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":24,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":24,"character":5},"end":{"line":24,"character":9}}}]}
<<<
Content-Length: 261

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":25,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}
<<<
Content-Length: 5998

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":2},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":25,"character":33}},"rangeLength":511,"text":"// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 163

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":11,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":189,"character":1},"end":{"line":189,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":12,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:189:1-189:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6357

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":2},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 3951

{"jsonrpc":"2.0","id":13,"result":[{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":8},"end":{"line":23,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":35}},"selectionRange":{"start":{"line":26,"character":18},"end":{"line":26,"character":25}}},{"name":"temperatureF","detail":"String","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":24}},"selectionRange":{"start":{"line":29,"character":7},"end":{"line":29,"character":19}}},{"name":"temperatureC","detail":"String","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":24}},"selectionRange":{"start":{"line":30,"character":7},"end":{"line":30,"character":19}}},{"name":"lastTime","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":26}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":22}}},{"name":"timerDelay","detail":"unsigned long","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":32}},"selectionRange":{"start":{"line":34,"character":14},"end":{"line":34,"character":24}}},{"name":"ssid","detail":"const char *","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":43}},"selectionRange":{"start":{"line":37,"character":12},"end":{"line":37,"character":16}}},{"name":"password","detail":"const char *","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":51}},"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":20}}},{"name":"server","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":21}},"selectionRange":{"start":{"line":41,"character":15},"end":{"line":41,"character":21}}},{"name":"readDSTemperatureC","detail":"String ()","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":56,"character":1}},"selectionRange":{"start":{"line":43,"character":7},"end":{"line":43,"character":25}}},{"name":"readDSTemperatureF","detail":"String ()","kind":12,"range":{"start":{"line":58,"character":0},"end":{"line":71,"character":1}},"selectionRange":{"start":{"line":58,"character":7},"end":{"line":58,"character":25}}},{"name":"index_html","detail":"const char[1800]","kind":13,"range":{"start":{"line":73,"character":0},"end":{"line":132,"character":19}},"selectionRange":{"start":{"line":73,"character":11},"end":{"line":73,"character":21}}},{"name":"processor","detail":"String (const String \u0026)","kind":12,"range":{"start":{"line":135,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":135,"character":7},"end":{"line":135,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":181,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":189,"character":1}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":9}}},{"name":"temperatureC","detail":"float","kind":13,"range":{"start":{"line":190,"character":2},"end":{"line":190,"character":20}},"selectionRange":{"start":{"line":190,"character":8},"end":{"line":190,"character":20}}},{"name":"temperatureF","detail":"float","kind":13,"range":{"start":{"line":191,"character":2},"end":{"line":191,"character":20}},"selectionRange":{"start":{"line":191,"character":8},"end":{"line":191,"character":20}}},{"name":"delay","detail":"int","kind":13,"range":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}},"selectionRange":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}}}]}
<<<
Content-Length: 262

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":3,"character":2},"end":{"line":3,"character":2}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":3,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":16,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":16,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":17}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":17,"result":null}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":17}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":20,"result":null}
<<<
Content-Length: 202

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":0}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":21,"result":[]}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":22,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":57}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":22,"result":[]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":23,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":2,"character":52}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":23,"result":null}
<<<
Content-Length: 384

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":3},"contentChanges":[{"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":57}},"rangeLength":57,"text":"Отображение показаний температуры DS18B20 на веб-сервере"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 163

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 3951

{"jsonrpc":"2.0","id":24,"result":[{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":8},"end":{"line":23,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":35}},"selectionRange":{"start":{"line":26,"character":18},"end":{"line":26,"character":25}}},{"name":"temperatureF","detail":"String","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":24}},"selectionRange":{"start":{"line":29,"character":7},"end":{"line":29,"character":19}}},{"name":"temperatureC","detail":"String","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":24}},"selectionRange":{"start":{"line":30,"character":7},"end":{"line":30,"character":19}}},{"name":"lastTime","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":26}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":22}}},{"name":"timerDelay","detail":"unsigned long","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":32}},"selectionRange":{"start":{"line":34,"character":14},"end":{"line":34,"character":24}}},{"name":"ssid","detail":"const char *","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":43}},"selectionRange":{"start":{"line":37,"character":12},"end":{"line":37,"character":16}}},{"name":"password","detail":"const char *","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":51}},"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":20}}},{"name":"server","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":21}},"selectionRange":{"start":{"line":41,"character":15},"end":{"line":41,"character":21}}},{"name":"readDSTemperatureC","detail":"String ()","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":56,"character":1}},"selectionRange":{"start":{"line":43,"character":7},"end":{"line":43,"character":25}}},{"name":"readDSTemperatureF","detail":"String ()","kind":12,"range":{"start":{"line":58,"character":0},"end":{"line":71,"character":1}},"selectionRange":{"start":{"line":58,"character":7},"end":{"line":58,"character":25}}},{"name":"index_html","detail":"const char[1800]","kind":13,"range":{"start":{"line":73,"character":0},"end":{"line":132,"character":19}},"selectionRange":{"start":{"line":73,"character":11},"end":{"line":73,"character":21}}},{"name":"processor","detail":"String (const String \u0026)","kind":12,"range":{"start":{"line":135,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":135,"character":7},"end":{"line":135,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":181,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":189,"character":1}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":9}}},{"name":"temperatureC","detail":"float","kind":13,"range":{"start":{"line":190,"character":2},"end":{"line":190,"character":20}},"selectionRange":{"start":{"line":190,"character":8},"end":{"line":190,"character":20}}},{"name":"temperatureF","detail":"float","kind":13,"range":{"start":{"line":191,"character":2},"end":{"line":191,"character":20}},"selectionRange":{"start":{"line":191,"character":8},"end":{"line":191,"character":20}}},{"name":"delay","detail":"int","kind":13,"range":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}},"selectionRange":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}}}]}Content-Length: 3951

{"jsonrpc":"2.0","id":25,"result":[{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":8},"end":{"line":23,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":35}},"selectionRange":{"start":{"line":26,"character":18},"end":{"line":26,"character":25}}},{"name":"temperatureF","detail":"String","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":24}},"selectionRange":{"start":{"line":29,"character":7},"end":{"line":29,"character":19}}},{"name":"temperatureC","detail":"String","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":24}},"selectionRange":{"start":{"line":30,"character":7},"end":{"line":30,"character":19}}},{"name":"lastTime","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":26}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":22}}},{"name":"timerDelay","detail":"unsigned long","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":32}},"selectionRange":{"start":{"line":34,"character":14},"end":{"line":34,"character":24}}},{"name":"ssid","detail":"const char *","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":43}},"selectionRange":{"start":{"line":37,"character":12},"end":{"line":37,"character":16}}},{"name":"password","detail":"const char *","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":51}},"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":20}}},{"name":"server","detail":"int","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":21}},"selectionRange":{"start":{"line":41,"character":15},"end":{"line":41,"character":21}}},{"name":"readDSTemperatureC","detail":"String ()","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":56,"character":1}},"selectionRange":{"start":{"line":43,"character":7},"end":{"line":43,"character":25}}},{"name":"readDSTemperatureF","detail":"String ()","kind":12,"range":{"start":{"line":58,"character":0},"end":{"line":71,"character":1}},"selectionRange":{"start":{"line":58,"character":7},"end":{"line":58,"character":25}}},{"name":"index_html","detail":"const char[1800]","kind":13,"range":{"start":{"line":73,"character":0},"end":{"line":132,"character":19}},"selectionRange":{"start":{"line":73,"character":11},"end":{"line":73,"character":21}}},{"name":"processor","detail":"String (const String \u0026)","kind":12,"range":{"start":{"line":135,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":135,"character":7},"end":{"line":135,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":181,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":189,"character":1}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":9}}},{"name":"temperatureC","detail":"float","kind":13,"range":{"start":{"line":190,"character":2},"end":{"line":190,"character":20}},"selectionRange":{"start":{"line":190,"character":8},"end":{"line":190,"character":20}}},{"name":"temperatureF","detail":"float","kind":13,"range":{"start":{"line":191,"character":2},"end":{"line":191,"character":20}},"selectionRange":{"start":{"line":191,"character":8},"end":{"line":191,"character":20}}},{"name":"delay","detail":"int","kind":13,"range":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}},"selectionRange":{"start":{"line":196,"character":2},"end":{"line":196,"character":7}}}]}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":2,"character":56},"end":{"line":2,"character":56}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":26,"result":[]}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":22,"character":59}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":27,"result":null}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6369

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":3},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"7","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"7","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":49,"character":51}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":28,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:49:51-49:51: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":25}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":29,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:25-37:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":23,"character":22}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":30,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:23:22-23:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":31,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":23}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":31,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:23-30:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":32,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":23}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":32,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:23-38:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":43,"character":22}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":33,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:43:22-43:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":34,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":36,"character":25}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":34,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:36:25-36:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":35,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":25}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":35,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:25-37:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":36,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":24}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":36,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:24-37:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":20}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":37,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":20}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":38,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":39,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":40,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":41,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":42,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":42,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":43,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":44,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":45,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":45,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":46,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":47,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":48,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":49,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":50,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":51,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":52,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":52,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":53,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":54,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":55,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":56,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":57,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":58,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":59,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":60,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":61,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":62,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:40: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":63,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":64,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":65,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:42: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":66,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":41}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":66,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:41-38:41: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":67,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":38}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":67,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:38-37:38: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 297

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":4},"contentChanges":[{"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":42}},"rangeLength":22,"text":"Pauk17414"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 163

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":68,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":69,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":70,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:29-37:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 118

{"jsonrpc":"2.0","id":"8","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"8","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6356

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":4},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"9","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"9","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"10","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"10","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 204

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":27}}}Content-Length: 163

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":71,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:27-38:27: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 37

{"jsonrpc":"2.0","id":72,"result":[]}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":27},"end":{"line":38,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":73,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:27-38:27: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":74,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":26}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":74,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:26-38:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":75,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":25}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":75,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:25-38:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":76,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 224

{"jsonrpc":"2.0","id":76,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":77,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":78,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":79,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":80,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":80,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":81,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":82,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":83,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":84,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":85,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":86,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":87,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":88,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":88,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":89,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":90,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":91,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":91,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":92,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":93,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":94,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":95,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":96,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":96,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":97,"result":[]}
<<<
Content-Length: 163

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":98,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":39,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":99,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-39:0: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":48}}}Content-Length: 164

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":100,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:48-38:48: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":101,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":102,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":102,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":103,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":49}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":103,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:49: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":104,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":50}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":105,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:50: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":106,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":47}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":106,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:47-38:47: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 299

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":5},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":50}},"rangeLength":26,"text":"19LaFiLat93"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 164

{"jsonrpc":"2.0","id":108,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":107,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":108,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":109,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":35},"end":{"line":38,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":109,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:35-38:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 119

{"jsonrpc":"2.0","id":"11","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"11","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6341

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":5},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"12","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"12","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"13","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"13","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":110,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":190,"character":8},"end":{"line":190,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":111,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:8-190:8: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":112,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":113,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":114,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":197,"character":1},"end":{"line":197,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":114,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:197:1-197:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":115,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":21}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":115,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:21-29:21: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":116,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":116,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:22-29:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":117,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":118,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":118,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:22-29:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":119,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":120,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":120,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:22-29:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":121,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":121,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":122,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":122,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:22-29:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":123,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":123,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":6},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"rangeLength":0,"text":"\""},{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"rangeLength":0,"text":"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":124,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 164

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":126,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":25},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":124,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":125,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":126,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:25-29:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 397

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":7},"contentChanges":[{"range":{"start":{"line":29,"character":25},"end":{"line":29,"character":25}},"rangeLength":0,"text":"\""},{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":23}},"rangeLength":0,"text":"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":127,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":127}}Content-Length: 164

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":129,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":26},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":127,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":128,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":129,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:26-29:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":26}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":130,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:24-29:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 119

{"jsonrpc":"2.0","id":"14","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"14","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6349

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":7},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\"\"\"\"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":8},"contentChanges":[{"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":26}},"rangeLength":2,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}Content-Length: 164

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":131,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":132,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":133,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:24-29:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 287

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":9},"contentChanges":[{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":134}}Content-Length: 164

{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":134,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":135,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":136,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:23-29:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":10},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":137,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":137}}Content-Length: 164

{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":137,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":138,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":139,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:22-29:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 6342

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":10},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":11},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":140,"result":[]}
<<<
Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":12},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":141,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":141,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"15","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"15","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6338

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":12},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = ;\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":13},"contentChanges":[{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"rangeLength":0,"text":"\"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":142,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":142}}Content-Length: 164

{"jsonrpc":"2.0","id":143,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":144,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":23},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":142,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":143,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":144,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:23-29:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":14},"contentChanges":[{"range":{"start":{"line":29,"character":23},"end":{"line":29,"character":24}},"rangeLength":1,"text":"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":145}}Content-Length: 164

{"jsonrpc":"2.0","id":146,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":147,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":29,"character":24},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":145,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":146,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":147,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:24-29:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":148,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":29,"character":24},"end":{"line":29,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":148,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:29:24-29:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 6342

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":14},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}Content-Length: 193

{"jsonrpc":"2.0","id":149,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":149,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":150,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":151,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":151,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":152,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":30,"character":21},"end":{"line":30,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":152,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:21-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":153,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":153,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":154,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":154,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":155,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:23-30:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":156,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":156,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":157,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":21}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":157,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:21-30:21: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":158,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":158,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":159,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"16","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"16","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":160,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:22-30:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":15},"contentChanges":[{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":161,"result":[]}
<<<
Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":16},"contentChanges":[{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":162,"result":[]}
<<<
Content-Length: 6338

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":16},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = ;\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 292

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":17},"contentChanges":[{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"rangeLength":0,"text":"\"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":163,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":163}}Content-Length: 164

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":165,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":23},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":163,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":164,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":165,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:23-30:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 290

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":18},"contentChanges":[{"range":{"start":{"line":30,"character":23},"end":{"line":30,"character":24}},"rangeLength":1,"text":"\""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":166}}Content-Length: 164

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 250

{"jsonrpc":"2.0","id":168,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":30,"character":24},"context":{"triggerKind":2,"triggerCharacter":"\""}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":166,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":167,"result":[]}Content-Length: 225

{"jsonrpc":"2.0","id":168,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:24-30:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":169,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":30,"character":24},"end":{"line":30,"character":24}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":169,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:30:24-30:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 119

{"jsonrpc":"2.0","id":"17","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"17","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6342

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":18},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}\r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"18","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"18","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"19","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"19","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":170,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":48,"character":23}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":170,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:23-48:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":171,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":48,"character":23}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":171,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:23-48:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":172,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":43,"character":28}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":172,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:43:28-43:28: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":173,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":174,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:43:28-43:28: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":175,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":44,"character":50}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":175,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:44:50-44:50: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":176,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":48,"character":24}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":176,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:24-48:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":177,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":48,"character":23}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":177,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:23-48:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":178,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":48,"character":22}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":178,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:22-48:22: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":179,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":179,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":180,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":48,"character":23},"end":{"line":48,"character":23}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":180,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:48:23-48:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":181,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":54,"character":2}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":181,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:54:2-54:2: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":182,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":54,"character":2}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":182,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:54:2-54:2: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":183,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":54,"character":3}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":183,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:54:3-54:3: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":184,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":54,"character":2}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":184,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:54:2-54:2: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":185,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":54,"character":3},"end":{"line":54,"character":3}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":186,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:54:3-54:3: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":187,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":55,"character":6}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":187,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:55:6-55:6: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":188,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":55,"character":7}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":188,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:55:7-55:7: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":189,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":55,"character":16}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":189,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:55:16-55:16: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":190,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":55,"character":17}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":190,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:55:17-55:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":191,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":55,"character":19}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":191,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:55:19-55:19: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":192,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":59,"character":29}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":192,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:59:29-59:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":193,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":58,"character":29}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":193,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:58:29-58:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":194,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":58,"character":29},"end":{"line":58,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":195,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:58:29-58:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":196,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":63,"character":23}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":196,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:63:23-63:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":197,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":64,"character":24}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":197,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:64:24-64:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":198,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":64,"character":25}}}Content-Length: 164

{"jsonrpc":"2.0","id":199,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":198,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:64:25-64:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":199,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":200,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":64,"character":25},"end":{"line":64,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":200,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:64:25-64:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":201,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":67,"character":28}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":201,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:67:28-67:28: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":202,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":63,"character":25}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":202,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:63:25-63:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":203,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":203,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":204,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":63,"character":25},"end":{"line":63,"character":25}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":204,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:63:25-63:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":205,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":205,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":66,"character":10},"end":{"line":66,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":206,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:66:10-66:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":207,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":76,"character":32}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":207,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:76:32-76:32: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":208,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":106,"character":46}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":208,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:106:46-106:46: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":209,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":210,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":79,"character":10},"end":{"line":79,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":210,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:10-79:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":211,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":73,"character":47}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":211,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:47-73:47: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":212,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":212,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":213,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":73,"character":47},"end":{"line":73,"character":47}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":213,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:47-73:47: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":214,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":73,"character":44}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":214,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:44-73:44: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":215,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":73,"character":46}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":215,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:46-73:46: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":73,"character":46}}}Content-Length: 164

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":216,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:46-73:46: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":217,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":73,"character":46},"end":{"line":73,"character":46}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":218,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:73:46-73:46: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":219,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":76,"character":53}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":219,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:76:53-76:53: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":220,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":77,"character":55}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":220,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:77:55-77:55: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":221,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":82,"character":11}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":221,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:82:11-82:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":222,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":81,"character":11}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":222,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:81:11-81:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":223,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":81,"character":10}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":223,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:81:10-81:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":224,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":82,"character":9}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":224,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:82:9-82:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":225,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":81,"character":9}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":225,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:81:9-81:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":226,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":88,"character":12}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":226,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:88:12-88:12: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":227,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":87,"character":12}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":227,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:87:12-87:12: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":228,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":87,"character":16}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":228,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:87:16-87:16: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":229,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":16}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":229,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:16-86:16: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":230,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":17}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":230,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:17-86:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":231,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":85,"character":14}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":231,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:85:14-85:14: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":85,"character":15}}}Content-Length: 164

{"jsonrpc":"2.0","id":233,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":232,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:85:15-85:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":233,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":234,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":85,"character":15},"end":{"line":85,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":234,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:85:15-85:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":235,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":85,"character":14}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":235,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:85:14-85:14: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":236,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":79,"character":9}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":236,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:9-79:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":237,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":237,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":238,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":79,"character":10},"end":{"line":79,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":238,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:10-79:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":239,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":80,"character":7}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":239,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:80:7-80:7: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":240,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":79,"character":7}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":240,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:7-79:7: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":241,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":79,"character":9}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":241,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:9-79:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":242,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":242,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":243,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":79,"character":9},"end":{"line":79,"character":9}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":243,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:9-79:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":244,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":25}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":244,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:25-86:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":245,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":80,"character":11}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":245,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:80:11-80:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":246,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":79,"character":10}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":246,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:10-79:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":247,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":79,"character":9}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":247,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:9-79:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":248,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":249,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":79,"character":10},"end":{"line":79,"character":10}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":249,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:79:10-79:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":250,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":82,"character":14}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":250,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:82:14-82:14: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":251,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":85,"character":17}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":251,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:85:17-85:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":252,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":23}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":252,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:23-86:23: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":253,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":25}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":253,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:25-86:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":254,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":86,"character":8}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":254,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:86:8-86:8: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":255,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":112,"character":32}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":255,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:112:32-112:32: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":256,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":135,"character":35}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":256,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:135:35-135:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":257,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":258,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":135,"character":35},"end":{"line":135,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":258,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:135:35-135:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":259,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":137,"character":26}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":259,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:137:26-137:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":260,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":260,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":261,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":137,"character":27},"end":{"line":137,"character":27}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":261,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:137:27-137:27: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":262,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":140,"character":32}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":262,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:140:32-140:32: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":263,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":264,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":140,"character":33},"end":{"line":140,"character":33}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":264,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:140:33-140:33: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":265,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":147,"character":35}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":265}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":265,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:147:35-147:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":266,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":154,"character":35}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":266,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:154:35-154:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":267,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":160,"character":37}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":267,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:160:37-160:37: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":268,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":160,"character":38}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":268,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:160:38-160:38: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":269,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":160,"character":39}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":269,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:160:39-160:39: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":270,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":271,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":160,"character":40},"end":{"line":160,"character":40}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":271,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:160:40-160:40: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":272,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":173,"character":39}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":272,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:173:39-173:39: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":273,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":170,"character":59}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":273,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:170:59-170:59: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":274,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":170,"character":59}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":274,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:170:59-170:59: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":275,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":170,"character":60}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":275,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:170:60-170:60: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":276,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":276,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":277,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":170,"character":61},"end":{"line":170,"character":61}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":277,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:170:61-170:61: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":278,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":174,"character":53}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":278,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:174:53-174:53: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":279,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":61}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":279,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:61-176:61: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":280,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":173,"character":73}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":280,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:173:73-173:73: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":281,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":173,"character":73}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":281,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:173:73-173:73: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":282,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":282,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":283,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":173,"character":73},"end":{"line":173,"character":73}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":283,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:173:73-173:73: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":284,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":74}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":284,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:74-176:74: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":285,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":177,"character":54}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":285,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:177:54-177:54: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":286,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":74}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":286,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:74-176:74: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":287,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":73}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":287,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:73-176:73: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":288,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":72}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":288,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:72-176:72: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":289,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":289,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":290,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":176,"character":73},"end":{"line":176,"character":73}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":290,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:73-176:73: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":291,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":176,"character":72}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":291,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:176:72-176:72: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":292,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":184,"character":41}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":292,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:184:41-184:41: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":184,"character":42}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":293,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:184:42-184:42: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":294,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":294,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":295,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":184,"character":43},"end":{"line":184,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":295,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:184:43-184:43: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":296,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":3}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":296,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:3-190:3: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":297,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":183,"character":10}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":297,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:10-183:10: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":298,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":298,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":299,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":183,"character":11},"end":{"line":183,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":299,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:11-183:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":300,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":185,"character":20}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":300,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:185:20-185:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":301,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":185,"character":25}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":301,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:185:25-185:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":302,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":186,"character":26}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":302,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:186:26-186:26: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":303,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":195,"character":6}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":303,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:195:6-195:6: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":304,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":9}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":304,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:9-190:9: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":305,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":306,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":197,"character":1},"end":{"line":197,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":306,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:197:1-197:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":307,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":191,"character":30}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":307,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:191:30-191:30: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":308,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":183,"character":12}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":308,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:12-183:12: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":309,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":183,"character":11}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":309,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:11-183:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":310,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":310,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":311,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":183,"character":11},"end":{"line":183,"character":11}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":311,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:11-183:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":312,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":186,"character":39}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":312,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:186:39-186:39: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":313,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":313,"result":[]}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":183,"character":12},"end":{"line":183,"character":12}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":314,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:183:12-183:12: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":315,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":184,"character":12}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":315,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:184:12-184:12: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":316,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":317,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":189,"character":1},"end":{"line":189,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":317,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:189:1-189:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":318,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":186,"character":24}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":318,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:186:24-186:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":319,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":192,"character":19}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":319,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:192:19-192:19: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":320,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":15}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":320,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:15-190:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":321,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":11}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":321,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:11-190:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":322,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":11}}}Content-Length: 164

{"jsonrpc":"2.0","id":323,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":322,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:11-190:11: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":323,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":324,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":324,"result":[]}
<<<
Content-Length: 268

{"jsonrpc":"2.0","id":325,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":190,"character":8},"end":{"line":190,"character":20}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 226

{"jsonrpc":"2.0","id":325,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:8-190:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":326,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":190,"character":19}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":326,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:190:19-190:19: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":327,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":327,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":328,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":189,"character":1},"end":{"line":189,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":328,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:189:1-189:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 206

{"jsonrpc":"2.0","id":329,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":169,"character":15}}}Content-Length: 164

{"jsonrpc":"2.0","id":330,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":329,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:169:15-169:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":330,"result":[]}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":331,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":169,"character":15}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":331,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:169:15-169:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 269

{"jsonrpc":"2.0","id":332,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":169,"character":15},"end":{"line":169,"character":15}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":332,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:169:15-169:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 194

{"jsonrpc":"2.0","id":333,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":152,"character":17}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":333}}
>>>
Content-Length: 227

{"jsonrpc":"2.0","id":333,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:152:17-152:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":334,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":7,"character":1}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":334,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:7:1-7:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":335,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":5,"character":1}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":335,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:5:1-5:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":336,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":5,"character":0}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":336,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:5:0-5:0: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":337,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":6,"character":8}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":337,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:6:8-6:8: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":338,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":5,"character":0}}}
>>>
Content-Length: 221

{"jsonrpc":"2.0","id":338,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:5:0-5:0: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":339,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":339,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":340,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":340,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":341,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":341,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":342,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":342,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":343,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":343,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":344,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":344,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":345,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":345,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":346,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":346,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":347,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":347,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":348,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":348,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":349,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":349,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":350,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":350,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":351,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":351,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":352,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":352,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":353,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":353,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":354,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":354,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":355,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":355,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":356,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":356,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":357,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":357,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":358,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":358,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":359,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":359}}Content-Length: 164

{"jsonrpc":"2.0","id":360,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":360}}Content-Length: 164

{"jsonrpc":"2.0","id":361,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":361}}Content-Length: 164

{"jsonrpc":"2.0","id":362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":362}}Content-Length: 164

{"jsonrpc":"2.0","id":363,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":363}}Content-Length: 164

{"jsonrpc":"2.0","id":364,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":364}}Content-Length: 164

{"jsonrpc":"2.0","id":365,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":365}}Content-Length: 164

{"jsonrpc":"2.0","id":366,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":359,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":360,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":361,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":362,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":363,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":364,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":365,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":366,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":367,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":367,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":368,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":5,"character":0},"end":{"line":197,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 223

{"jsonrpc":"2.0","id":368,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:5:0-197:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 289

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":19},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":197,"character":1}},"rangeLength":5464,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":369,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":369}}Content-Length: 164

{"jsonrpc":"2.0","id":370,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":369,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":370,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"20","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"20","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 402

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":19},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n"}}Content-Length: 284

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":20},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":5,"character":0}},"rangeLength":2,"text":""}]}}Content-Length: 164

{"jsonrpc":"2.0","id":371,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":371}}Content-Length: 164

{"jsonrpc":"2.0","id":372,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":371,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":372,"result":[]}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}
<<<
Content-Length: 398

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":20},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n"}}Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":21},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"\r\n"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":373,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":373}}Content-Length: 164

{"jsonrpc":"2.0","id":374,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":373,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":374,"result":[]}Content-Length: 119

{"jsonrpc":"2.0","id":"21","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"21","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 402

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":21},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n"}}Content-Length: 5995

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":22},"contentChanges":[{"range":{"start":{"line":5,"character":0},"end":{"line":5,"character":0}},"rangeLength":0,"text":"// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":375,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":375}}Content-Length: 164

{"jsonrpc":"2.0","id":376,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":375,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":376,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":377,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":189,"character":1},"end":{"line":189,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":377,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:189:1-189:1: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 6113

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":22},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"REPLACE_WITH_YOUR_PASSWORD\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"22","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"22","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"23","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"23","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":378,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":31}}}Content-Length: 164

{"jsonrpc":"2.0","id":379,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":378,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:31-37:31: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":379,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":380,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":31},"end":{"line":37,"character":31}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":380,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:31-37:31: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":381,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":25}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":381,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:25-37:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":382,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":25}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":382}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":382,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:25-37:25: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":383,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":24}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":383,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":384,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":24}}}Content-Length: 164

{"jsonrpc":"2.0","id":385,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":384,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:24: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":385,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":386,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":386,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":387,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":387,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":388,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":388,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":389,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":389,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":390,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":390,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":391,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":391,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":392,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":392,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":393,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":393,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":394,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":394,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":395,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":395,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":396,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":396,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":397,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":397,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":398,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":398,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":399,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":399,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":400,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":400,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":401,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":401,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":402,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":402,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":403,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":403,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":404,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":404,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":405,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":405,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":406,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":406,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":407,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":407,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":408,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":408,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":409,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":409,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":410,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":410,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":411,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":411,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":412,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":50}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":412,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:24-38:50: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":413,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":50}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":413,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:50-38:50: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 198

{"jsonrpc":"2.0","id":414,"method":"textDocument/definition","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":50}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":414,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:50-38:50: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 300

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":23},"contentChanges":[{"range":{"start":{"line":38,"character":24},"end":{"line":38,"character":50}},"rangeLength":26,"text":"19LaFiLat93"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":415,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":415}}Content-Length: 164

{"jsonrpc":"2.0","id":416,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":415,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":416,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":417,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":38,"character":35},"end":{"line":38,"character":35}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":417,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:35-38:35: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 119

{"jsonrpc":"2.0","id":"24","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"24","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6098

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":23},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"REPLACE_WITH_YOUR_SSID\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"25","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"25","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"26","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"26","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":418,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":20}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":418,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":419,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":20}}}Content-Length: 164

{"jsonrpc":"2.0","id":420,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":419,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:20: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":420,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":421,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":421,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":422,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":422,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":423,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":423,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":424,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":424,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":425,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":425,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":426,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":426,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":427,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":427,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":428,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":428,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":429,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":429,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":430,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":430,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":431,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":431,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":432,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":432,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":433,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":433,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":434,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":434,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":435,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":435,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":436,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":436,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":437,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":437,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":438,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":438,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":439,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":439,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":440,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":440,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":441,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":41}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":441,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:41: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":442,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":442,"result":[]}
<<<
Content-Length: 164

{"jsonrpc":"2.0","id":443,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":443,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":444,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":43}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":444,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:43: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 205

{"jsonrpc":"2.0","id":445,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":42}}}Content-Length: 164

{"jsonrpc":"2.0","id":446,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":445,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:42-37:42: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 38

{"jsonrpc":"2.0","id":446,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":447,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":42}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":447,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:20-37:42: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":448,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":41}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":448,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:41-37:41: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":449,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":40}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":449,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:40-37:40: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 298

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":24},"contentChanges":[{"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":42}},"rangeLength":22,"text":"Pauk17414"}]}}Content-Length: 164

{"jsonrpc":"2.0","id":450,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":450}}Content-Length: 164

{"jsonrpc":"2.0","id":451,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":450,"result":[]}Content-Length: 38

{"jsonrpc":"2.0","id":451,"result":[]}
<<<
Content-Length: 267

{"jsonrpc":"2.0","id":452,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":452,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:29-37:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}Content-Length: 119

{"jsonrpc":"2.0","id":"27","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"27","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 6085

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":24},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}}
>>>
Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 119

{"jsonrpc":"2.0","id":"28","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"28","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 114

{"jsonrpc":"2.0","id":"29","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 41

{"jsonrpc":"2.0","id":"29","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":453,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":40,"character":29}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":453,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:40:29-40:29: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":454,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":40,"character":28}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":454,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:40:28-40:28: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":455,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":19}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":455,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:19-38:19: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":456,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":18}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":456,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:18-38:18: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":457,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":18}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":457,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:18-37:18: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":458,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":15}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":458,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:15-38:15: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":459,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":38,"character":17}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":459,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:38:17-38:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":460,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":17}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":460,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:17-37:17: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 193

{"jsonrpc":"2.0","id":461,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":37,"character":18}}}
>>>
Content-Length: 225

{"jsonrpc":"2.0","id":461,"result":null,"error":{"code":-32603,"message":"invalid range file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino:37:18-37:18: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":462,"method":"shutdown","params":null}






Started logging.

<<<
Content-Length: 3037

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":16580,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"d:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","rootUri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","name":"TemoCloud"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 6103

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","languageId":"cpp","version":1,"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nОтображение показаний температуры DS18B20 на веб-сервере\r\n*/\r\n\r\n// Import required libraries\r\n#ifdef ESP32\r\n  #include <WiFi.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#else\r\n  #include <Arduino.h>\r\n  #include <ESP8266WiFi.h>\r\n  #include <Hash.h>\r\n  #include <ESPAsyncTCP.h>\r\n  #include <ESPAsyncWebServer.h>\r\n#endif\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// Data wire is connected to GPIO 4\r\n#define ONE_WIRE_BUS 4\r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(ONE_WIRE_BUS);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\n// Variables to store temperature values\r\nString temperatureF = \"\";\r\nString temperatureC = \"\";\r\n\r\n// Timer variables\r\nunsigned long lastTime = 0;  \r\nunsigned long timerDelay = 30000;\r\n\r\n// Replace with your network credentials\r\nconst char* ssid = \"Pauk17414\";\r\nconst char* password = \"19LaFiLat93\";\r\n\r\n// Create AsyncWebServer object on port 80\r\nAsyncWebServer server(80);\r\n\r\nString readDSTemperatureC() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempC = sensors.getTempCByIndex(0);\r\n\r\n  if(tempC == -127.00) {\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Celsius: \");\r\n    Serial.println(tempC); \r\n  }\r\n  return String(tempC);\r\n}\r\n\r\nString readDSTemperatureF() {\r\n  // Call sensors.requestTemperatures() to issue a global temperature and Requests to all devices on the bus\r\n  sensors.requestTemperatures(); \r\n  float tempF = sensors.getTempFByIndex(0);\r\n\r\n  if(int(tempF) == -196){\r\n    Serial.println(\"Failed to read from DS18B20 sensor\");\r\n    return \"--\";\r\n  } else {\r\n    Serial.print(\"Temperature Fahrenheit: \");\r\n    Serial.println(tempF);\r\n  }\r\n  return String(tempF);\r\n}\r\n\r\nconst char index_html[] PROGMEM = R\"rawliteral(\r\n<!DOCTYPE HTML><html>\r\n<head>\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.2/css/all.css\" integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\r\n  <style>\r\n    html {\r\n     font-family: Arial;\r\n     display: inline-block;\r\n     margin: 0px auto;\r\n     text-align: center;\r\n    }\r\n    h2 { font-size: 3.0rem; }\r\n    p { font-size: 3.0rem; }\r\n    .units { font-size: 1.2rem; }\r\n    .ds-labels{\r\n      font-size: 1.5rem;\r\n      vertical-align:middle;\r\n      padding-bottom: 15px;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n  <h2>ESP DS18B20 Server</h2>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Celsius</span> \r\n    <span id=\"temperaturec\">%TEMPERATUREC%</span>\r\n    <sup class=\"units\">&deg;C</sup>\r\n  </p>\r\n  <p>\r\n    <i class=\"fas fa-thermometer-half\" style=\"color:#059e8a;\"></i> \r\n    <span class=\"ds-labels\">Temperature Fahrenheit</span>\r\n    <span id=\"temperaturef\">%TEMPERATUREF%</span>\r\n    <sup class=\"units\">&deg;F</sup>\r\n  </p>\r\n</body>\r\n<script>\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturec\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturec\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\nsetInterval(function ( ) {\r\n  var xhttp = new XMLHttpRequest();\r\n  xhttp.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      document.getElementById(\"temperaturef\").innerHTML = this.responseText;\r\n    }\r\n  };\r\n  xhttp.open(\"GET\", \"/temperaturef\", true);\r\n  xhttp.send();\r\n}, 10000) ;\r\n</script>\r\n</html>)rawliteral\";\r\n\r\n// Replaces placeholder with DS18B20 values\r\nString processor(const String& var){\r\n  //Serial.println(var);\r\n  if(var == \"TEMPERATUREC\"){\r\n    return temperatureC;\r\n  }\r\n  else if(var == \"TEMPERATUREF\"){\r\n    return temperatureF;\r\n  }\r\n  return String();\r\n}\r\n\r\nvoid setup(){\r\n  // Serial port for debugging purposes\r\n  Serial.begin(115200);\r\n  Serial.println();\r\n  \r\n  // Start up the DS18B20 library\r\n  sensors.begin();\r\n\r\n  temperatureC = readDSTemperatureC();\r\n  temperatureF = readDSTemperatureF();\r\n\r\n  // Connect to Wi-Fi\r\n  WiFi.begin(ssid, password);\r\n  Serial.println(\"Connecting to WiFi\");\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(\".\");\r\n  }\r\n  Serial.println();\r\n  \r\n  // Print ESP Local IP Address\r\n  Serial.println(WiFi.localIP());\r\n\r\n  // Route for root / web page\r\n  server.on(\"/\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/html\", index_html, processor);\r\n  });\r\n  server.on(\"/temperaturec\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureC.c_str());\r\n  });\r\n  server.on(\"/temperaturef\", HTTP_GET, [](AsyncWebServerRequest *request){\r\n    request->send_P(200, \"text/plain\", temperatureF.c_str());\r\n  });\r\n  // Start server\r\n  server.begin();\r\n}\r\n \r\nvoid loop(){\r\n  if ((millis() - lastTime) > timerDelay) {\r\n    temperatureC = readDSTemperatureC();\r\n    temperatureF = readDSTemperatureF();\r\n    lastTime = millis();\r\n  }  \r\n}"}}}Content-Length: 265

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":37,"character":29},"end":{"line":37,"character":29}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 3318

{"jsonrpc":"2.0","id":2,"result":[{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":8},"end":{"line":23,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":35}},"selectionRange":{"start":{"line":26,"character":18},"end":{"line":26,"character":25}}},{"name":"temperatureF","detail":"String","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":24}},"selectionRange":{"start":{"line":29,"character":7},"end":{"line":29,"character":19}}},{"name":"temperatureC","detail":"String","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":24}},"selectionRange":{"start":{"line":30,"character":7},"end":{"line":30,"character":19}}},{"name":"lastTime","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":26}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":22}}},{"name":"timerDelay","detail":"unsigned long","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":32}},"selectionRange":{"start":{"line":34,"character":14},"end":{"line":34,"character":24}}},{"name":"ssid","detail":"const char *","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":30}},"selectionRange":{"start":{"line":37,"character":12},"end":{"line":37,"character":16}}},{"name":"password","detail":"const char *","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":36}},"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":20}}},{"name":"server","detail":"AsyncWebServer","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":25}},"selectionRange":{"start":{"line":41,"character":15},"end":{"line":41,"character":21}}},{"name":"readDSTemperatureC","detail":"String ()","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":56,"character":1}},"selectionRange":{"start":{"line":43,"character":7},"end":{"line":43,"character":25}}},{"name":"readDSTemperatureF","detail":"String ()","kind":12,"range":{"start":{"line":58,"character":0},"end":{"line":71,"character":1}},"selectionRange":{"start":{"line":58,"character":7},"end":{"line":58,"character":25}}},{"name":"index_html","detail":"const char[1800]","kind":13,"range":{"start":{"line":73,"character":0},"end":{"line":132,"character":19}},"selectionRange":{"start":{"line":73,"character":11},"end":{"line":73,"character":21}}},{"name":"processor","detail":"String (const String \u0026)","kind":12,"range":{"start":{"line":135,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":135,"character":7},"end":{"line":135,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":181,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":189,"character":1}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":9}}}]}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 162

{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 3318

{"jsonrpc":"2.0","id":3,"result":[{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":29}},"selectionRange":{"start":{"line":23,"character":8},"end":{"line":23,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":26,"character":0},"end":{"line":26,"character":35}},"selectionRange":{"start":{"line":26,"character":18},"end":{"line":26,"character":25}}},{"name":"temperatureF","detail":"String","kind":13,"range":{"start":{"line":29,"character":0},"end":{"line":29,"character":24}},"selectionRange":{"start":{"line":29,"character":7},"end":{"line":29,"character":19}}},{"name":"temperatureC","detail":"String","kind":13,"range":{"start":{"line":30,"character":0},"end":{"line":30,"character":24}},"selectionRange":{"start":{"line":30,"character":7},"end":{"line":30,"character":19}}},{"name":"lastTime","detail":"unsigned long","kind":13,"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":26}},"selectionRange":{"start":{"line":33,"character":14},"end":{"line":33,"character":22}}},{"name":"timerDelay","detail":"unsigned long","kind":13,"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":32}},"selectionRange":{"start":{"line":34,"character":14},"end":{"line":34,"character":24}}},{"name":"ssid","detail":"const char *","kind":13,"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":30}},"selectionRange":{"start":{"line":37,"character":12},"end":{"line":37,"character":16}}},{"name":"password","detail":"const char *","kind":13,"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":36}},"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":20}}},{"name":"server","detail":"AsyncWebServer","kind":13,"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":25}},"selectionRange":{"start":{"line":41,"character":15},"end":{"line":41,"character":21}}},{"name":"readDSTemperatureC","detail":"String ()","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":56,"character":1}},"selectionRange":{"start":{"line":43,"character":7},"end":{"line":43,"character":25}}},{"name":"readDSTemperatureF","detail":"String ()","kind":12,"range":{"start":{"line":58,"character":0},"end":{"line":71,"character":1}},"selectionRange":{"start":{"line":58,"character":7},"end":{"line":58,"character":25}}},{"name":"index_html","detail":"const char[1800]","kind":13,"range":{"start":{"line":73,"character":0},"end":{"line":132,"character":19}},"selectionRange":{"start":{"line":73,"character":11},"end":{"line":73,"character":21}}},{"name":"processor","detail":"String (const String \u0026)","kind":12,"range":{"start":{"line":135,"character":0},"end":{"line":144,"character":1}},"selectionRange":{"start":{"line":135,"character":7},"end":{"line":135,"character":16}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":146,"character":0},"end":{"line":181,"character":1}},"selectionRange":{"start":{"line":146,"character":5},"end":{"line":146,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":189,"character":1}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":9}}}]}
<<<
Content-Length: 203

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":32,"character":18}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 265

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":32,"character":18},"end":{"line":32,"character":18}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":32,"character":8}}}Content-Length: 202

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":32,"character":8}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 263

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":32,"character":8},"end":{"line":32,"character":8}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":17,"character":25}}}
>>>
Content-Length: 209

{"jsonrpc":"2.0","id":9,"result":{"contents":{"kind":"markdown","value":"### `DallasTemperature.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\DallasTemperature.h\n```"}}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":8,"character":12}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":10,"result":null}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":11,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":7,"character":10}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":11,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":7,"character":9}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":12,"result":null}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":13,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":13,"result":null}
<<<
Content-Length: 262

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}
<<<
Content-Length: 190

{"jsonrpc":"2.0","id":15,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":15,"result":null}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":189,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":16,"result":[]}
<<<
Content-Length: 288

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":189,"character":1}},"rangeLength":5404,"text":""}]}}Content-Length: 163

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 163

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":17,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":18,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 170

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":2},"text":""}}Content-Length: 1310

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":3},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266\r\n*/\r\n\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// GPIO where the DS18B20 is connected to\r\nconst int oneWireBus = 4;     \r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(oneWireBus);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\nvoid setup() {\r\n  // Start the Serial Monitor\r\n  Serial.begin(115200);\r\n  // Start the DS18B20 sensor\r\n  sensors.begin();\r\n}\r\n\r\nvoid loop() {\r\n  sensors.requestTemperatures(); \r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}]}}Content-Length: 163

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 163

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}
>>>
Content-Length: 1096

{"jsonrpc":"2.0","id":19,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":27}},"selectionRange":{"start":{"line":10,"character":8},"end":{"line":10,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":35}},"selectionRange":{"start":{"line":13,"character":18},"end":{"line":13,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":29,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":9}}}]}Content-Length: 1096

{"jsonrpc":"2.0","id":20,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":24}},"selectionRange":{"start":{"line":9,"character":10},"end":{"line":9,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":10,"character":0},"end":{"line":10,"character":27}},"selectionRange":{"start":{"line":10,"character":8},"end":{"line":10,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":35}},"selectionRange":{"start":{"line":13,"character":18},"end":{"line":13,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":20,"character":1}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":29,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":9}}}]}
<<<
Content-Length: 264

{"jsonrpc":"2.0","id":21,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":33,"character":1},"end":{"line":33,"character":1}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 114

{"jsonrpc":"2.0","id":21,"result":null,"error":{"code":-32603,"message":"-32001 Line value is out of range (38)"}}
<<<
Content-Length: 1197

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","version":3},"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266\r\n*/\r\n\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n// GPIO where the DS18B20 is connected to\r\nconst int oneWireBus = 4;     \r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(oneWireBus);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\nvoid setup() {\r\n  // Start the Serial Monitor\r\n  Serial.begin(115200);\r\n  // Start the DS18B20 sensor\r\n  sensors.begin();\r\n}\r\n\r\nvoid loop() {\r\n  sensors.requestTemperatures(); \r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n  delay(5000);\r\n}"}}Content-Length: 191

{"jsonrpc":"2.0","id":22,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":5,"character":15}}}
>>>
Content-Length: 180

{"jsonrpc":"2.0","id":22,"result":{"contents":{"kind":"markdown","value":"### `OneWire.h`  \n\n---\n```\nC:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\OneWire.h\n```"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 42400

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","buildOutputUri":"file:///c%3A/Users/%D1%80%D1%81/AppData/Local/arduino/sketches/DED8D48A9CC8B4B1794B2DD1B62EF77D","executableSectionsSize":[{"name":"text","size":266800,"maxSize":1044464},{"name":"data","size":26968,"maxSize":81920}],"usedLibraries":[{"name":"OneWire","author":"Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom","maintainer":"Paul Stoffregen","sentence":"Access 1-wire temperature sensors, memory and other chips.","paragraph":"","website":"http://www.pjrc.com/teensy/td_libs_OneWire.html","category":"Communication","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.3.8","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS18x20_Temperature","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS2408_Switch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\OneWire\\examples\\DS250x_PROM"],"providesIncludes":["OneWire.h"],"properties":{},"compatibleWith":{}},{"name":"DallasTemperature","author":"Miles Burton <mail@milesburton.com>, Tim Newsome <nuisance@casualhacker.net>, Guil Barros <gfbarros@bappos.com>, Rob Tillaart <rob.tillaart@gmail.com>","maintainer":"Miles Burton <mail@milesburton.com>","sentence":"Arduino library for Dallas/Maxim temperature ICs","paragraph":"Support for DS18B20 and other Dallas/Maxim 1-Wire temperature sensors","website":"https://github.com/milesburton/Arduino-Temperature-Control-Library","category":"Sensors","installDir":"C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","sourceDir":"c:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"4.0.3","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Alarm","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\AlarmHandler","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ESP-WebServer","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\ExternalPullup","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multibus_simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Multiple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SaveRecallScratchPad","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\SetUserData","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Simple","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Single","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Tester","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\Timing","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\TwoPin_DS18B20","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataDemo","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\UserDataWriteBatch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\WaitForConversion2","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\oneWireSearch","C:\\Users\\рс\\Documents\\Arduino\\libraries\\DallasTemperature\\examples\\readPowerSupply"],"providesIncludes":["DallasTemperature.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp8266:esp8266","version":"2.7.4","installDir":"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","packageUrl":"https://arduino.esp8266.com/stable/package_esp8266com_index.json"},"buildProperties":["_id=nodemcuv2","build.arch=ESP8266","build.board=ESP8266_NODEMCU","build.board.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.core=esp8266","build.core.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\cores\\esp8266","build.core.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","build.debug_level=","build.debug_port=","build.exception_flags=-fno-exceptions","build.extra_flags=-DESP8266","build.f_cpu=80000000L","build.flash_flags=-DFLASHMODE_DIO","build.flash_freq=40","build.flash_ld=eagle.flash.4m2m.ld","build.flash_mode=dio","build.flash_size=4M","build.flash_size_bytes=0x400000","build.float=-u _printf_float -u _scanf_float","build.fqbn=esp8266:esp8266:nodemcuv2:led=2,baud=115200,xtal=80,eesz=4M2M,dbg=Disabled,lvl=None____,ip=lm2f,vt=flash,exception=legacy,wipe=none,ssl=all","build.led=-DLED_BUILTIN=2","build.library_discovery_phase=0","build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","build.lwip_include=lwip2/include","build.lwip_lib=-llwip2-536-feat","build.mcu=esp8266","build.path=C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D","build.project_name=TemoCloud.ino","build.rfcal_addr=0x3FC000","build.sdk=NONOSDK22x_190703","build.source.path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","build.spiffs_blocksize=8192","build.spiffs_end=0x3FA000","build.spiffs_pagesize=256","build.spiffs_start=0x200000","build.sslflags=","build.stdcpp_level=-std=gnu++11","build.stdcpp_lib=-lstdc++","build.system.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\system","build.variant=nodemcu","build.variant.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4\\variants\\nodemcu","build.vtable_flags=-DVTABLES_IN_FLASH","compiler.S.cmd=xtensa-lx106-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-c -g -x assembler-with-cpp -MMD -mlongcalls","compiler.ar.cmd=xtensa-lx106-elf-ar","compiler.ar.extra_flags=","compiler.ar.flags=cru","compiler.as.cmd=xtensa-lx106-elf-as","compiler.c.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.cmd=xtensa-lx106-elf-gcc","compiler.c.elf.extra_flags=","compiler.c.elf.flags=-g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read","compiler.c.elf.libs=-lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc","compiler.c.extra_flags=","compiler.c.flags=-c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpp.cmd=xtensa-lx106-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions ","compiler.cpreprocessor.flags=-D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\"","compiler.elf2hex.cmd=esptool","compiler.elf2hex.extra_flags=","compiler.elf2hex.flags=","compiler.libc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf","compiler.objcopy.eep.extra_flags=","compiler.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/","compiler.sdk.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk","compiler.size.cmd=xtensa-lx106-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","extra.time.dst=0","extra.time.local=1745674989","extra.time.utc=1745664189","extra.time.zone=10800","ide_version=10607","menu.baud.115200=115200","menu.baud.115200.upload.speed=115200","menu.baud.230400.linux=230400","menu.baud.230400.macosx=230400","menu.baud.230400.upload.speed=230400","menu.baud.256000=256000","menu.baud.256000.upload.speed=256000","menu.baud.3000000=3000000","menu.baud.3000000.upload.speed=3000000","menu.baud.460800.linux=460800","menu.baud.460800.macosx=460800","menu.baud.460800.upload.speed=460800","menu.baud.512000=512000","menu.baud.512000.upload.speed=512000","menu.baud.57600=57600","menu.baud.57600.upload.speed=57600","menu.baud.921600=921600","menu.baud.921600.upload.speed=921600","menu.dbg.Disabled=Disabled","menu.dbg.Disabled.build.debug_port=","menu.dbg.Serial=Serial","menu.dbg.Serial.build.debug_port=-DDEBUG_ESP_PORT=Serial","menu.dbg.Serial1=Serial1","menu.dbg.Serial1.build.debug_port=-DDEBUG_ESP_PORT=Serial1","menu.eesz.4M=4MB (FS:none OTA:~1019KB)","menu.eesz.4M.build.flash_ld=eagle.flash.4m.ld","menu.eesz.4M.build.flash_size=4M","menu.eesz.4M.build.flash_size_bytes=0x400000","menu.eesz.4M.build.rfcal_addr=0x3FC000","menu.eesz.4M.build.spiffs_pagesize=256","menu.eesz.4M.upload.maximum_size=1044464","menu.eesz.4M1M=4MB (FS:1MB OTA:~1019KB)","menu.eesz.4M1M.build.flash_ld=eagle.flash.4m1m.ld","menu.eesz.4M1M.build.flash_size=4M","menu.eesz.4M1M.build.flash_size_bytes=0x400000","menu.eesz.4M1M.build.rfcal_addr=0x3FC000","menu.eesz.4M1M.build.spiffs_blocksize=8192","menu.eesz.4M1M.build.spiffs_end=0x3FA000","menu.eesz.4M1M.build.spiffs_pagesize=256","menu.eesz.4M1M.build.spiffs_start=0x300000","menu.eesz.4M1M.upload.maximum_size=1044464","menu.eesz.4M2M=4MB (FS:2MB OTA:~1019KB)","menu.eesz.4M2M.build.flash_ld=eagle.flash.4m2m.ld","menu.eesz.4M2M.build.flash_size=4M","menu.eesz.4M2M.build.flash_size_bytes=0x400000","menu.eesz.4M2M.build.rfcal_addr=0x3FC000","menu.eesz.4M2M.build.spiffs_blocksize=8192","menu.eesz.4M2M.build.spiffs_end=0x3FA000","menu.eesz.4M2M.build.spiffs_pagesize=256","menu.eesz.4M2M.build.spiffs_start=0x200000","menu.eesz.4M2M.upload.maximum_size=1044464","menu.eesz.4M3M=4MB (FS:3MB OTA:~512KB)","menu.eesz.4M3M.build.flash_ld=eagle.flash.4m3m.ld","menu.eesz.4M3M.build.flash_size=4M","menu.eesz.4M3M.build.flash_size_bytes=0x400000","menu.eesz.4M3M.build.rfcal_addr=0x3FC000","menu.eesz.4M3M.build.spiffs_blocksize=8192","menu.eesz.4M3M.build.spiffs_end=0x3FA000","menu.eesz.4M3M.build.spiffs_pagesize=256","menu.eesz.4M3M.build.spiffs_start=0x100000","menu.eesz.4M3M.upload.maximum_size=1044464","menu.exception.disabled=Disabled (new can abort)","menu.exception.disabled.build.exception_flags=-fno-exceptions -DNEW_OOM_ABORT","menu.exception.disabled.build.stdcpp_lib=-lstdc++","menu.exception.enabled=Enabled","menu.exception.enabled.build.exception_flags=-fexceptions","menu.exception.enabled.build.stdcpp_lib=-lstdc++-exc","menu.exception.legacy=Legacy (new can return nullptr)","menu.exception.legacy.build.exception_flags=-fno-exceptions","menu.exception.legacy.build.stdcpp_lib=-lstdc++","menu.ip.hb1=v1.4 Higher Bandwidth","menu.ip.hb1.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.hb1.build.lwip_lib=-llwip_gcc","menu.ip.hb2f=v2 Higher Bandwidth","menu.ip.hb2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.hb2f.build.lwip_include=lwip2/include","menu.ip.hb2f.build.lwip_lib=-llwip2-1460-feat","menu.ip.hb2n=v2 Higher Bandwidth (no features)","menu.ip.hb2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.hb2n.build.lwip_include=lwip2/include","menu.ip.hb2n.build.lwip_lib=-llwip2-1460","menu.ip.hb6f=v2 IPv6 Higher Bandwidth","menu.ip.hb6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=1460 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.hb6f.build.lwip_include=lwip2/include","menu.ip.hb6f.build.lwip_lib=-llwip6-1460-feat","menu.ip.lm2f=v2 Lower Memory","menu.ip.lm2f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0","menu.ip.lm2f.build.lwip_include=lwip2/include","menu.ip.lm2f.build.lwip_lib=-llwip2-536-feat","menu.ip.lm2n=v2 Lower Memory (no features)","menu.ip.lm2n.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=0 -DLWIP_IPV6=0","menu.ip.lm2n.build.lwip_include=lwip2/include","menu.ip.lm2n.build.lwip_lib=-llwip2-536","menu.ip.lm6f=v2 IPv6 Lower Memory","menu.ip.lm6f.build.lwip_flags=-DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=1","menu.ip.lm6f.build.lwip_include=lwip2/include","menu.ip.lm6f.build.lwip_lib=-llwip6-536-feat","menu.ip.src=v1.4 Compile from source","menu.ip.src.build.lwip_flags=-DLWIP_OPEN_SRC","menu.ip.src.build.lwip_lib=-llwip_src","menu.ip.src.recipe.hooks.sketch.prebuild.1.pattern=make -C \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip/src\" install TOOLS_PATH=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-\"","menu.led.16=16","menu.led.16.build.led=-DLED_BUILTIN=16","menu.led.2=2","menu.led.2.build.led=-DLED_BUILTIN=2","menu.lvl.CORE=CORE","menu.lvl.CORE.build.debug_level=-DDEBUG_ESP_CORE","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.COREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.HTTP_CLIENT=HTTP_CLIENT","menu.lvl.HTTP_CLIENT.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT","menu.lvl.HTTP_CLIENTHTTP_SERVER=HTTP_CLIENT+HTTP_SERVER","menu.lvl.HTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_SERVER=HTTP_SERVER","menu.lvl.HTTP_SERVER.build.debug_level=-DDEBUG_ESP_HTTP_SERVER","menu.lvl.HTTP_UPDATE=HTTP_UPDATE","menu.lvl.HTTP_UPDATE.build.debug_level=-DDEBUG_ESP_HTTP_UPDATE","menu.lvl.MDNS=MDNS","menu.lvl.MDNS.build.debug_level=-DDEBUG_ESP_MDNS","menu.lvl.NoAssert-NDEBUG=NoAssert-NDEBUG","menu.lvl.NoAssert-NDEBUG.build.debug_level=-DNDEBUG","menu.lvl.None____=None","menu.lvl.None____.build.debug_level=","menu.lvl.OOM=OOM","menu.lvl.OOM.build.debug_level=-DDEBUG_ESP_OOM","menu.lvl.OTA=OTA","menu.lvl.OTA.build.debug_level=-DDEBUG_ESP_OTA","menu.lvl.SSL=SSL","menu.lvl.SSL.build.debug_level=-DDEBUG_ESP_SSL","menu.lvl.SSLHTTP_CLIENT=SSL+HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER=SSL+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLHTTP_SERVER=SSL+HTTP_SERVER","menu.lvl.SSLHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEM=SSL+TLS_MEM","menu.lvl.SSLTLS_MEM.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM","menu.lvl.SSLTLS_MEMHTTP_CLIENT=SSL+TLS_MEM+HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS=SSL+TLS_MEM+HTTP_CLIENT+HTTP_SERVER+CORE+WIFI+HTTP_UPDATE+UPDATER+OTA+OOM+MDNS","menu.lvl.SSLTLS_MEMHTTP_CLIENTHTTP_SERVERCOREWIFIHTTP_UPDATEUPDATEROTAOOMMDNS.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_CORE -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_ESP_OOM -DDEBUG_ESP_MDNS","menu.lvl.SSLTLS_MEMHTTP_SERVER=SSL+TLS_MEM+HTTP_SERVER","menu.lvl.SSLTLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_SSL -DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEM=TLS_MEM","menu.lvl.TLS_MEM.build.debug_level=-DDEBUG_ESP_TLS_MEM","menu.lvl.TLS_MEMHTTP_CLIENT=TLS_MEM+HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENT.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER=TLS_MEM+HTTP_CLIENT+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_CLIENTHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER=TLS_MEM+HTTP_SERVER","menu.lvl.TLS_MEMHTTP_SERVER.build.debug_level=-DDEBUG_ESP_TLS_MEM -DDEBUG_ESP_HTTP_SERVER","menu.lvl.UPDATER=UPDATER","menu.lvl.UPDATER.build.debug_level=-DDEBUG_ESP_UPDATER","menu.lvl.WIFI=WIFI","menu.lvl.WIFI.build.debug_level=-DDEBUG_ESP_WIFI","menu.ssl.all=All SSL ciphers (most compatible)","menu.ssl.all.build.sslflags=","menu.ssl.basic=Basic SSL ciphers (lower ROM use)","menu.ssl.basic.build.sslflags=-DBEARSSL_SSL_BASIC","menu.vt.flash=Flash","menu.vt.flash.build.vtable_flags=-DVTABLES_IN_FLASH","menu.vt.heap=Heap","menu.vt.heap.build.vtable_flags=-DVTABLES_IN_DRAM","menu.vt.iram=IRAM","menu.vt.iram.build.vtable_flags=-DVTABLES_IN_IRAM","menu.wipe.all=All Flash Contents","menu.wipe.all.upload.erase_cmd=erase_flash","menu.wipe.none=Only Sketch","menu.wipe.none.upload.erase_cmd=","menu.wipe.sdk=Sketch + WiFi Settings","menu.wipe.sdk.upload.erase_cmd=erase_region \"0x3FC000\" 0x4000","menu.xtal.160=160 MHz","menu.xtal.160.build.f_cpu=160000000L","menu.xtal.80=80 MHz","menu.xtal.80.build.f_cpu=80000000L","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=NodeMCU 1.0 (ESP-12E Module)","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -g -x assembler-with-cpp -MMD -mlongcalls -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-ar\" cru  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -fno-exceptions -Wl,-Map \"-Wl,C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.map\" -g -w -Os -nostdlib -Wl,--no-check-sections -u app_entry -u _printf_float -u _scanf_float -Wl,-static \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lib/NONOSDK22x_190703\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld\" \"-LC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/lib\" \"-Teagle.flash.4m2m.ld\" -Wl,--gc-sections -Wl,-wrap,system_restart_local -Wl,-wrap,spi_flash_read  -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" -Wl,--start-group {object_files} \"{archive_file_path}\" -lhal -lphy -lpp -lnet80211 -llwip2-536-feat -lwpa -lcrypto -lmain -lwps -lbearssl -laxtls -lespnow -lsmartconfig -lairkiss -lwpa2 -lstdc++ -lm -lc -lgcc -Wl,--end-group  \"-LC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D\"","recipe.c.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -Wpointer-arith -Wno-implicit-function-declaration -Wl,-EL -fno-inline-functions -nostdlib -mlongcalls -mtext-section-literals -falign-functions=4 -MMD -std=gnu99 -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-g++\" -D__ets__ -DICACHE_FLASH -U__STRICT_ANSI__ \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/lwip2/include\" \"-IC:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/libc/xtensa-lx106-elf/include\" \"-IC:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core\" -c -w -Os -g -mlongcalls -mtext-section-literals -fno-rtti -falign-functions=4 -std=gnu++11 -MMD -ffunction-sections -fdata-sections -fno-exceptions  -DNONOSDK22x_190703=1 -DF_CPU=80000000L -DLWIP_OPEN_SRC -DTCP_MSS=536 -DLWIP_FEATURES=1 -DLWIP_IPV6=0   -DARDUINO=10607 -DARDUINO_ESP8266_NODEMCU -DARDUINO_ARCH_ESP8266 -DARDUINO_BOARD=\"ESP8266_NODEMCU\" -DLED_BUILTIN=2 -DFLASHMODE_DIO  -DESP8266 {includes} \"{source_file}\" -o \"{object_file}\"","recipe.hooks.linking.prelink.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-gcc\" -CC -E -P -DVTABLES_IN_FLASH \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sdk/ld/eagle.app.v6.common.ld.h\" -o \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/local.eagle.app.v6.common.ld\"","recipe.hooks.sketch.prebuild.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode header --publickey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/public.key\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/core/Updater_Signing.h\"","recipe.objcopy.eep.pattern=","recipe.objcopy.hex.1.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py\" --eboot \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf\" --app \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --flash_mode dio --flash_freq 40 --flash_size 4M --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","recipe.objcopy.hex.2.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py\" --mode sign --privatekey \"D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud/private.key\" --bin \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\" --out \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.signed\" --legacy \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin.legacy_sig\"","recipe.objcopy.hex.3.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py\" --elf \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\" --path \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin\"","recipe.output.save_file=TemoCloud.ino.nodemcu.bin","recipe.output.tmp_file=TemoCloud.ino.bin","recipe.size.pattern=\"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506/bin/xtensa-lx106-elf-size\" -A \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.elf\"","recipe.size.regex=^(?:\\.irom0\\.text|\\.text|\\.text1|\\.data|\\.rodata|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.data|\\.rodata|\\.bss)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arm-none-eabi-gcc-4.8.3-2014q1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.arm-none-eabi-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arm-none-eabi-gcc\\4.8.3-2014q1","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino5","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.bossac-1.6.1-arduino.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.bossac.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\bossac\\1.6.1-arduino","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.eboot=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/bootloaders/eboot/eboot.elf","runtime.tools.elf2bin=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/elf2bin.py","runtime.tools.esp-rv32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.4-2f7dcd86-v1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esp32-arduino-libs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.4-2f7dcd86-v1","runtime.tools.esptool_py-4.5.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.esptool_py-4.9.dev3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.9.dev3","runtime.tools.esptool_py.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\4.5.1","runtime.tools.linux-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\dfu-util","runtime.tools.linux-hid_flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\hid_flash","runtime.tools.linux-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\src","runtime.tools.linux-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stlink","runtime.tools.linux-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux\\stm32flash","runtime.tools.linux64-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\dfu-util","runtime.tools.linux64-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\src","runtime.tools.linux64-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stlink","runtime.tools.linux64-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.linux64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\linux64\\stm32flash","runtime.tools.macosx-dfu-util.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\dfu-util","runtime.tools.macosx-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\src","runtime.tools.macosx-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stlink","runtime.tools.macosx-stm32flash.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.macosx.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\macosx\\stm32flash","runtime.tools.makecorever=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/makecorever.py","runtime.tools.mdns-discovery-1.0.5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.5","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-2.5.0-4-fe5bb56.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mklittlefs-3.0.0-gnu12-dc7f933.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\3.0.0-gnu12-dc7f933","runtime.tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\2.5.0-4-fe5bb56","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","runtime.tools.openocd-esp32-v0.12.0-esp32-20230921.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20230921","runtime.tools.openocd-esp32-v0.12.0-esp32-20241016.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.openocd-esp32.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20241016","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\14.2_20240403","runtime.tools.s3-gcc-2021r2-p5.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.s3-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\s3-gcc\\2021r2-p5","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.signing=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/signing.py","runtime.tools.sizes=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/sizes.py","runtime.tools.stm32tools-2021.5.31.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.stm32tools.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\stm32duino\\tools\\stm32tools\\2021.5.31","runtime.tools.win-dfu-util-0.9-win64.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\dfu-util-0.9-win64","runtime.tools.win-lib.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\lib","runtime.tools.win-src.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\src","runtime.tools.win-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\stlink","runtime.tools.win-texane-stlink.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.win.path=C:\\Users\\рс\\Documents\\Arduino\\hardware\\Arduino_STM32-master\\tools\\win\\texane-stlink","runtime.tools.xtensa-esp-elf-gdb-11.2_20220823.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\11.2_20220823","runtime.tools.xtensa-esp-elf-gdb-14.2_20240403.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\14.2_20240403","runtime.tools.xtensa-lx106-elf-gcc-2.5.0-4-b40a506.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\2.5.0-4-b40a506","serial.disableDTR=true","serial.disableRTS=true","sketch_path=D:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","software=ARDUINO","tools.avrdude.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.esptool.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool.path=","tools.esptool.upload.network_pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.params.quiet=","tools.esptool.upload.params.verbose=","tools.esptool.upload.pattern=\"{cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/upload.py\" --chip esp8266 --port \"{serial.port}\" --baud \"115200\" \"{upload.verbose}\"  --before default_reset --after hard_reset write_flash 0x0 \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool.upload.protocol=esp","tools.esptool__pluggable_network.cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.network_cmd=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1/python3","tools.esptool__pluggable_network.path=","tools.esptool__pluggable_network.upload.field.password=Password","tools.esptool__pluggable_network.upload.field.password.secret=true","tools.esptool__pluggable_network.upload.params.quiet=","tools.esptool__pluggable_network.upload.params.verbose=","tools.esptool__pluggable_network.upload.pattern=\"{network_cmd}\" \"C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/espota.py\" -i \"{upload.port.address}\" -p \"{upload.port.properties.port}\" \"--auth={upload.field.password}\" -f \"C:\\Users\\рс\\AppData\\Local\\arduino\\sketches\\DED8D48A9CC8B4B1794B2DD1B62EF77D/TemoCloud.ino.bin\"","tools.esptool__pluggable_network.upload.protocol=esp","tools.mklittlefs.cmd=mklittlefs.exe","tools.mklittlefs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\hardware\\esp8266\\2.7.4/tools/mklittlefs","tools.mkspiffs.cmd=mkspiffs.exe","tools.mkspiffs.path=C:\\Users\\рс\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\2.5.0-4-b40a506","upload.erase_cmd=","upload.maximum_data_size=81920","upload.maximum_size=1044464","upload.resetmethod=--before default_reset --after hard_reset","upload.speed=115200","upload.tool=esptool","upload.tool.default=esptool","upload.tool.network=esptool__pluggable_network","upload.wait_for_upload_port=true","upload_port.0.board=nodemcuv2","version=2.7.4"]}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"6","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"6","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 266

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":14}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
Content-Length: 192

{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":11,"character":56}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":24,"result":null}






Started logging.

<<<
Content-Length: 3036

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":3268,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"d:\\ESP8266_GitHub\\TermoCloud\\TemoCloud","rootUri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud","name":"TemoCloud"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 3070

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino","languageId":"cpp","version":1,"text":"/* 26апр25\r\nhttps://microkontroller.ru/esp8266-projects/podklyuchenie-datchika-temperatury-ds18b20-k-esp8266/\r\nПодключение датчика температуры DS18B20 к NodeMCU ESP8266 и Google Firebase\r\n*/\r\n\r\n#include <ESP8266WiFi.h>                 \r\n#include <FirebaseArduino.h>  \r\n\r\n#include <OneWire.h>\r\n#include <DallasTemperature.h>\r\n\r\n#define FIREBASE_HOST \"temocloud-default-rtdb.firebaseio.com\" \r\n#define FIREBASE_AUTH \"***\" // ваш секретный ключ из firebase\r\n#define WIFI_SSID \"***\" // Change the name of your WIFI\r\n#define WIFI_PASSWORD \"***\" // Change the password of your WIFI\r\n \r\n// GPIO where the DS18B20 is connected to\r\nconst int oneWireBus = 4;     \r\n\r\n// Setup a oneWire instance to communicate with any OneWire devices\r\nOneWire oneWire(oneWireBus);\r\n\r\n// Pass our oneWire reference to Dallas Temperature sensor \r\nDallasTemperature sensors(&oneWire);\r\n\r\nvoid setup() {\r\n  // Start the Serial Monitor\r\n  Serial.begin(115200);\r\n  // Start the DS18B20 sensor\r\n  delay(1000);\r\n  sensors.begin();\r\n  delay(1000);\r\n               \r\n  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);                                  \r\n  Serial.print(\"Connecting to \");\r\n  Serial.print(WIFI_SSID);\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    Serial.print(\".\");\r\n    delay(500);\r\n  }\r\n  \r\n  Serial.println();\r\n  Serial.print(\"Connected to \");\r\n  Serial.println(WIFI_SSID);\r\n  Serial.print(\"IP Address is : \");\r\n  Serial.println(WiFi.localIP());                                  //печатаем локальный IP адрес\r\n  delay(5000);\r\n  \r\n  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);                    // соединяемся с firebase\r\n  Firebase.setString(\"TempºC\", \"TempºF\");                         //передаем начальную строку состояния светодиода\r\n}\r\n\r\n// https://microkontroller.ru/esp8266-projects/avtomatizacziya-doma-s-pomoshhyu-google-firebase-i-nodemcu-esp8266/?ysclid=m9wgwbv7v1992380719\r\nvoid firebasereconnect()\r\n{\r\n  Serial.println(\"Trying to reconnect\");\r\n    Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);\r\n  }\r\n\r\nvoid loop() {\r\n\r\n  sensors.requestTemperatures(); \r\n  float temperatureC = sensors.getTempCByIndex(0);\r\n  float temperatureF = sensors.getTempFByIndex(0);\r\n  Serial.print(temperatureC);\r\n  Serial.println(\"ºC\");\r\n  Serial.print(temperatureF);\r\n  Serial.println(\"ºF\");\r\n    \r\n if (Firebase.failed())\r\n      {\r\n      Serial.print(\"setting number failed:\");\r\n      Serial.println(Firebase.error());\r\n      firebasereconnect();\r\n      return;\r\n      }\r\n\r\n  Firebase.setFloat (\"TempºC\",temperatureC);\r\n  Firebase.setFloat (\"TempºF\",temperatureF);\r\n\r\n  delay(3000);\r\n}\r\n"}}}Content-Length: 265

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 162

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"}}}Content-Length: 191

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":49,"character":55}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 1319

{"jsonrpc":"2.0","id":2,"result":[{"name":"oneWireBus","detail":"const int","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":24}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":20}}},{"name":"oneWire","detail":"OneWire","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":27}},"selectionRange":{"start":{"line":20,"character":8},"end":{"line":20,"character":15}}},{"name":"sensors","detail":"DallasTemperature","kind":13,"range":{"start":{"line":23,"character":0},"end":{"line":23,"character":35}},"selectionRange":{"start":{"line":23,"character":18},"end":{"line":23,"character":25}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":25,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":25,"character":5},"end":{"line":25,"character":10}}},{"name":"firebasereconnect","detail":"void ()","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":57,"character":3}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":22}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":59,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":59,"character":5},"end":{"line":59,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"1/2","percentage":50}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 191

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///d%3A/ESP8266_GitHub/TermoCloud/TemoCloud/TemoCloud.ino"},"position":{"line":14,"character":54}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 58

{"jsonrpc":"2.0","id":5,"method":"shutdown","params":null}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}